FORMAT: 1A
HOST: https://api.test.paysafe.com/alternatepayments/v1/

# Paysafe Alternate Payments API

The Paysafe Alternate Payments API allows you to send and/or receive payments from your consumers, using a
variety of non-card regional payment methods, with a single integration.

# Release Notes

|API Version    |Release Date          |Details|
|---            |---                   |---|
|v1             |2019-10-22            |- Updated NETELLER payments integration to hosted redirect. |
|                                      |- Added PaymentHandle support. |
|v1             |2019-06-13            |- Added PayPal|
|v1             |2019-02-01            |- Added statusTime, updatedTime to resources|
|v1             |2018-10-01            |- Added additional payment vehicles \(indiaFinancialSystem, ach, bacs, becs\)| 
|v1             |2018-05-16            |- Added Identities, Recipient objects|
|               |                      |- Rebrand Paysafe Pay Later|
|               |                      |- Added Instarem|
|v1             |2018-04-02            |- Added Interac|
|v1             |2018-03-05            |- Removed iDeal|
|v1             |2018-02-22            |- Added Paysafecash|
|v1             |2017-02-21            |- Added Skrill standalone credit|
|v1             |2018-01-10            |- Added support for Payolution verifications and payment installments|
|v1             |2017-11-15            |- Added RapidTransfer|
|v1             |2017-08-28            |- Added Paysafecard, Skrill, Neteller, Payolution|
|v1             |2017-08-09            |- Added /monitor endpoint|
|v1             |2017-05-06            |- Replaced error 5283 with 5031|
|               |                      |- Added void authorization|
|               |                      |- Add support for NO to Boku|
|v1             |2017-03-08            |- Added support for manual settlement|
|               |                      |- Support returns on settlement|
|               |                      |- Ability to refund a settlement|
|v1             |2016-12-15            |- Added Boku, Giropay|
|v1             |2016-08-01            |- Initial release with support for iDeal, Sofort|



# Technical Introduction
This section provides a technical introduction to the Paysafe Alternate Payments API.

## API Endpoints

The Paysafe Alternate Payments API is available in the Test environment for integration testing purposes.
To switch between the Test and the live Production systems you  need only to change the endpoint URI and the
credentials.

The following endpoints form the basis of a resource URI:

    Test endpoint &ndash; https://api.test.paysafe.com/alternatepayments/v1/<br/>
    Production endpoint &ndash; https://api.paysafe.com/alternatepayments/v1/

Because the Test environment is completely isolated, any changes you perform on your Test account configuration
(such as secure IP registration, APP registration, etc.) may have to be repeated in your Production account.


## Versioning

The API version will influence the request/response object structure as well as the functionality that is available through the API. A new version of the API will  be introduced only if we roll out a backwards-incompatible change
that may impact your existing integrations.

### Major Version

The major version \(i.e., /v1/ \) represents a major technology shift between versions of the API. Changes in the
major version are reserved for large-scale changes to the API that fundamentally change integration requirements
from the previous version.  Modified business domain models, re-design of functional flows, or change in API
resource patterns are all considered major changes.  Changes to a major version are rare and typically require
an extended deprecation cycle \(~2 years\) from prior versions to allow all consumers of the API to adapt.

> Your integration should take the following backwards-compatible changes into consideration so as not to break when additional fields are added to the API.

**What is considered a backwards-compatible change?**

* Adding API resources or adding new properties to existing API resources
* Modification to the order of parameters or JSON object elements
* Adding optional request parameters to API methods
* Adding webhook event types

**What is considered a backwards-incompatible change?**

* Removal of an API resource
* Removal of an API resources object attribute
* Changes to required parameter/JSON object elements
* Removal of previously supported API call

***

<a name="apikey" title="Authentication"></a>
## Authentication

In order for you to use the Paysafe REST API, Paysafe must first set you up on their system
and provide you with an API key. Your API key looks something like this:

> Key Username = MerchantXYZ<br/>
> Key Password = B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e

Note that this is not the same as your Merchant Back Office username and password.
The case-sensitive API key is sent using HTTP Basic Authentication. To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request. The Authorization header is constructed as follows:
 1. The Key Username and Key Password are combined into a string separated by a colon, e.g.,“Key Username:Key Password”.
 2. The resulting string literal is then encoded using Base64.
 3. The authorization method and a space (i.e., “Basic”) are then put before the encoded string.

For example, using the Key Username and Password examples above, the header is formed as follows:

`Authorization: Basic TWVyY2hhbnRYWVo6Qi10c3QxLTAtNTFlZDM5ZTQtMzEyZDAyMzQ1ZDNmMTIzMTIwODgxZGZmOWJiNDAyMGE4OWU4YWM0NGNkZmRjZWNkNzAyMTUxMTgyZmRjOTU yMjcyNjYxZDI5MGFiMmU1ODQ5ZTMxYmIwM2RlZWRlN2U=`

For additional details, please refer to [http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication).

**Note:** Your Production API key will be different from your Test API key. Contact your account manager for details. You must keep your API keys safe and ensure that it is used appropriately for your needs.


<a name="pagination" title="Pagination"></a>
## Pagination

API calls that return multiple resources will wrap the response as a named JSON array.  For example, a collection of "payment" objects would
be returned as "payments". By default, 10 items at a time will be returned and you can navigate to the next set of resources using the
supplied HATEOAS links.  List responses will also include a meta data section that will identify the number of records included in the collection,
the number of records per page (limit), and the current page number.
<br/><br/>
For example, if a request to look up payments identifies that there are 134 payments and you have set your limit to 15, the first 15 items will be returned with navigation links to provide the next 15 items in the list. If you navigate to the next page using the provided HATEOAS link, you will then retrieve items 16-30 with a new navigation link provided to return to the previous page, as well as a link to continue to the next page of items.

> _You can change the default list page size by defining a **limit** parameter value._

|Parameter Name |Description|
|---            |---|
|limit          |The number of records to be returned per page. Default = 10, Max = 100|
|offset         |Identifies your location within the list and allows you to fetch the next set of resources|
|startDate      |This is the start date in UTC.|
|endDate        |This is the end date in UTC.|

Sample Response with List Data

```
{
    "meta": {
        "numberOfRecords": 77,
        "limit": 10,
        "page": 1
    },
    "payments": [{
        "id": "044e3915-b612-40c7-b652-283bb288521f",
        "merchantRefNum": "xyz",
        "amount": 100,
        "currencyCode": "EUR",
        "paymentType": "SOFORT",
        "profile": {
            "firstName": "Stan",
            "lastName": "Smith",
            "email": "stan.smith@fox.com"
        },
        "sofort": {
            "descriptor": "mydescriptor",
            "sepa": {
                "bankName": "ing",
                "country": "NL",
                "iban": "DE89370400440532013000",
                "accountHolderName": "John Doe"
            }
        },
        "returnLinks": [{
            "rel": "default",
            "href": "http://yoursite.com/"
        }],
        "txnTime": "2016-05-05T20:34:06Z",
        "status": "INITIATED",
        "gatewayResponse": {
            "id": "043403-2342115455",
            "code": "000.200.000",
            "description": "transaction pending",
            "paymentType": "DB"
        },
        "links": [{
            "rel": "self",
            "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1000203713/payments/9769f140-0bd2-4fe7-b79b-338ccf8433fc"
        }]
    }],
    "links": [{
        "rel": "next",
        "href": "https://api.test.paysafe.com/ alternatepayments/v1/accounts/1000203713/payments?merchantRefNum=xyz&limit=10&offset=10&startDate=2016-06-06T19:04:43Z&endDate=2016-07-06T19:04:43Z"
    }, {
        "rel": "self",
        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1000203713/payments?merchantRefNum=xyz&limit=10&offset=0&startDate=2016-06-06T19:04:43Z&endDate=2016-07-06T19:04:43Z"
    }]
}
```


<a name="globalinvalidcharacters" title="Global Invalid Characters"></a>
## Global Invalid Characters

You must not include any of the characters in the following table as values in any of your request parameters. If you do, your request will result in an error.

|    Character    |    HEX    |    Description                     |
|-----------------|-----------|------------------------------------|
| "               | 22        | Double quotes (or speech marks)    |
| ;               | 3B        | Semicolon                          |
| ^               | 5E        | Caret, circumflex                  |
| *               | 2A        | Asterisk                           |
| <               | 3C        | Less than (or open angled bracket) |
| /               | 2F        | Slash or divide                    |
| [               | 5B        | Opening bracket                    |
| ]               | 5D        | Closing bracket                    |
| \               | 5C        | Backslash                          |


## HTTP Responses

HTTP response codes are used to indicate the status of a request.

**HTTP Status Code Summary**

|HTTP Response Code Category|Description|
|---|---|
|1xx: Informational|Communicates transfer protocol–level information|
|2xx: Success|Indicates that the client’s request was accepted|
|3xx: Redirection|Indicates that the client must take some additional action in order to complete the request|
|4xx: Client Error|Indicates that the client has made an error with the request|
|5xx: Server Error|Indicates that an error occurred on the server side|

**Common HTTP Response Status Codes**

|HTTP Status Code|Description|
|---|---|
|200 OK|Everything worked as expected.|
|201 CREATED|The request was successful. Paysafe created a new resource and the response body contains the representation.|
|202 ACCEPTED|This indicates that the client’s request will be handled asynchronously. It tells the client that the request appears valid, but it still may have problems once it is processed.|
|204 NO CONTENT|This is usually returned in response to a PUT, POST, or DELETE request, when the REST API declines to send back any status message or representation in the body of the response message.|
|304 NOT MODIFIED|The client's cached version of the representation is still up to date.|
|400 BAD REQUEST|This often indicates that a required parameter is missing or that a parameter is invalid. This is a generic client-side error status, used when no other 4xx error code is appropriate.|
|401 UNAUTHORIZED|This indicates that the client tried to operate on a protected resource without providing the proper authorization. They may have provided the wrong credentials or none at all.|
|402 PAYMENT REQUIRED|The parameters were valid but the request failed.|
|404 NOT FOUND|The requested resource does not exist.|
|405 METHOD NOT ALLOWED|The client tried to POST or PUT to a resource that would not accept it.|
|409 CONFLICT|The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the user might be able to resolve the conflict and resubmit the request.|
|415 UNSUPPORTED MEDIA TYPE|The request is in a format not supported by the requested resource for the requested method.|
|429 TOO MANY REQUESTS|The application is sending too many simultaneous requests.|
|500 INTERNAL SERVER ERROR|An error occurred with an internal server.|
|502 EXTERNAL SERVER ERROR|We received an invalid response from the upstream gateway in attempting to fulfill the request.|


## HATEOAS

The Alternate Payments API uses a RESTful endpoint structure and relies on HTTP verbs (GET, PUT, POST, DELETE)
to determine what action you are attempting to perform on a specific resource.

Each API call response includes an array of HATEOAS (Hypermedia as the Engine of Application State) links.
These links can be used to integrate subsequent flows and typically they will provide you information as to
what you can do next.  Additionally these links might be used to link to other resources related to the
current response object.

By using these links, you no longer need to hardcode your integration to call specific endpoint URLs to utilize
our API, but rather can use the returned URL for the specific purpose as defined by the 'rel' definition.

#### HATEOAS Link Structure

|Element  |Description|
|---      |---|
|rel      |Link relation that describes how this link relates to the previous call. Examples include self (get details of the current call), parent_payment (get details of the parent payment), or a related call such as to execute a refund on the payment.|
|href     |URL of the related HATEOAS link you can use for subsequent calls.|


Below are sample HATEOAS links from an API response that returns a collection of payments associated to a specific merchant reference. Links
are provided to navigate through the set of resources in the collection.

```
GET https://api.test.paysafe.com/v1/accounts/{ACCOUNT_ID}/payments?merchantRefNum={MERCHANT_REF_NUM}&limit=10&offset=10

...result set

"links": [{
    "rel": "self",
    "href": "https://api.test.paysafe.com/v1/accounts/{ACCOUNT_ID}/payments?merchantRefNum={MERCHANT_REF_NUM}&limit=10&offset=10"
},  {
    "rel": "prev",
    "href": "https://api.test.paysafe.com/v1/accounts/{ACCOUNT_ID}/payments?merchantRefNum={MERCHANT_REF_NUM}&limit=10&offset=0"
}, {
    "rel": "next",
    "href": "https://api.test.paysafe.com/v1/accounts/{ACCOUNT_ID}/payments?merchantRefNum={MERCHANT_REF_NUM}&limit=10&offset=20"
}]
```

# Resource Hierarchy and State Transition

![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/ap_resource_hierarchy.png)

Some resources in the system can transition through various statuses depending on the current state of the resource.  The diagrams below show the
valid statuses for these complex resources and how they are linked.

## Verifications
![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/verification_state_transition_diagram.png)

## Payments
![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_state_transition_diagram.png)

## Settlements
![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/settlement_state_transition_diagram.png)

## Standalone Credits
![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/standalonecredit_state_transition_diagram.png)

## Refunds
![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/settlement_state_transition_diagram.png)

## Returns
![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/return_reversal_state_transition_diagram.png)

## Return Reversals
![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/return_state_transition_diagram.png)


# Currencies
<a name="currencies"></a>

> When specifying amounts in your API calls be aware of the number of decimal places (minor units) that 
> each currency supports.  You must change the formatting of the amount based on the minor units for the 
> specific currency.  For example, Japanese Yen does not have minor units so the amount should be specified as 
> such.  ie: 50 JPY would pass 50 in the amount, 50.00 USD would be an amount of 5000, and 50.000 TND would be 50000.

|Currency Code|Description            |Decimal Places<br/>(Minor Units)|
|---          |---                    |---|
|Afghananistan Afghani|AFN|2|
|Albanian Lek|ALL|2|
|Algerian Dinar|DZD|2|
|Angolan Kwanza|AOA|2|
|Argentine Peso|ARS|2|
|Armenian Dram|AMD|2|
|Aruban Florin|AWG|2|
|Australian Dollar|AUD|2|
|Azerbaijani Manat|AZN|2|
|Bahamian Dollar|BSD|2|
|Bahraini Dinar|BHD|3|
|Bangladeshi Taka|BDT|2|
|Barbados Dollar|BBD|2|
|Belarusian Ruble|BYR|0|
|Belize Dollar|BZD|2|
|Bermudian Dollar|BMD|2|
|Bhutanese Ngultrum|BTN|2|
|Bolivian Mvdol (funds code)|BOV|2|
|Boliviano|BOB|2|
|Bosnia and Herzegovina Convertible Mark|BAM|2|
|Botswana Pula|BWP|2|
|Brazilian Real|BRL|2|
|Brunei Dollar|BND|2|
|Bulgarian Lev|BGN|2|
|Burundian Franc|BIF|0|
|CFA Franc BCEAO|XOF|0|
|CFA Franc BEAC|XAF|0|
|CFP Franc (Franc Pacifique)|XPF|0|
|Cambodian Riel|KHR|2|
|Canadian Dollar|CAD|2|
|Cayman Islands Dollar|KYD|2|
|Chilean Peso|CLP|0|
|Chinese Yuan Renminbi|CNY|2|
|Colombian Peso|COP|2|
|Comorian Franc|KMF|0|
|Congolese Franc|CDF|2|
|Costa Rican Colon|CRC|2|
|Croatian Kuna|HRK|2|
|Cuban Pero Convertible|CUC|2|
|Cuban Peso|CUP|2|
|Czech Koruna|CZK|2|
|Danish Krone|DKK|2|
|Djibouti Franc|DJF|0|
|Dominican Peso|DOP|2|
|East Caribbean Dollar|XCD|2|
|Egyptian Pound|EGP|2|
|Eritrean Nakfa|ERN|2|
|Ethiopian Birr|ETB|2|
|Euro|EUR|2|
|Falkland Islands Pound|FKP|2|
|Fiji Dollar|FJD|2|
|Gambian Dalasi|GMD|2|
|Georgian Lari|GEL|2|
|Ghanaian Cedi|GHS|2|
|Gibraltar Pound|GIP|2|
|Guatemalan Quetzal|GTQ|2|
|Guinean Franc|GNF|0|
|Guyanese Dollar|GYD|2|
|Haitian Gourde|HTG|2|
|Honduran Lempira|HNL|2|
|Hong Kong Dollar|HKD|2|
|Hungarian Forint|HUF|2|
|Icelandic Krona|ISK|0|
|Indian Rupee|INR|2|
|Indonesian Rupiah|IDR|2|
|Iranian Rial|IRR|2|
|Iraqi Dinar|IQD|3|
|Israeli New Sheqel|ILS|2|
|Jamaican Dollar|JMD|2|
|Japanese Yen|JPY|0|
|Jordanian Dinar|JOD|3|
|Kazakhstani Tenge|KZT|2|
|Kenyan Shilling|KES|2|
|Kuwaiti Dinar|KWD|3|
|Kyrgyzstani Som|KGS|2|
|Lao Kip|LAK|2|
|Lebanese Pound|LBP|2|
|Lesotho Loti|LSL|2|
|Liberian Dollar|LRD|2|
|Libyan Dinar|LYD|3|
|Macanese Pataca|MOP|2|
|Macedonian Denar|MKD|2|
|Malagasy Ariary|MGA|1|
|Malawian Kwacha|MWK|2|
|Malaysian Ringgit|MYR|2|
|Maldivian Rufiyaa|MVR|2|
|Mauritanian Ouguiya|MRO|1|
|Mauritian Rupee|MUR|2|
|Mexican Unidad de Inversion (UDI) (funds code)|MXV|2|
|Mexican Peso|MXN|2|
|Moldovan Leu|MDL|2|
|Mongolian Tugrik|MNT|2|
|Moroccan Dirham|MAD|2|
|Mozambican Metical|MZN|2|
|Myanmar Kyat|MMK|2|
|Namibian Dollar|NAD|2|
|Nepalese Rupee|NPR|2|
|Netherlands Antillean Guilder|ANG|2|
|New Taiwan Dollar|TWD|2|
|New Zealand Dollar|NZD|2|
|Nicaraguan Cordoba|NIO|2|
|Nigerian Naira|NGN|2|
|North Korean Won|KPW|2|
|Norwegian Krone|NOK|2|
|Omani Rial|OMR|3|
|Pakistani Rupee|PKR|2|
|Panamanian Balboa|PAB|2|
|Papua New Guinean Kina|PGK|2|
|Paraguayan Guarani|PYG|0|
|Peruvian Nuevo sol|PEN|2|
|Philippine Peso|PHP|2|
|Polish Zloty|PLN|2|
|Pound Sterling|GBP|2|
|Qatari Riyal|QAR|2|
|Romanian Leu|RON|2|
|Russian Ruble|RUB|2|
|Rwandan Franc|RWF|0|
|Saint Helena Pound|SHP|2|
|Samoan Tala|WST|2|
|Saudi Riyal|SAR|2|
|Serbian Dinar|RSD|2|
|Seychelles Rupee|SCR|2|
|Sierra Leonean Leone|SLL|2|
|Singapore Dollar|SGD|2|
|Solomon Islands Dollar|SBD|2|
|Somali Shilling|SOS|2|
|South African Rand|ZAR|2|
|South Korean Won|KRW|0|
|South Sudanese Pound|SSP|2|
|Sri Lankan Rupee|LKR|2|
|Sudanese Pound|SDG|2|
|Surinamese Dollar|SRD|2|
|Swazi Lilangeni|SZL|2|
|Swedish Krona/kronor|SEK|2|
|Swiss Franc|CHF|2|
|Syrian Pound|SYP|2|
|Tajikistani Somoni|TJS|2|
|Tanzanian Shilling|TZS|2|
|Thai Baht|THB|2|
|Tongan Paanga|TOP|2|
|Trinidad and Tobago Dollar|TTD|2|
|Tunisian Dinar|TND|3|
|Turkish Lira|TRY|2|
|Turkmenistani Manat|TMT|2|
|Ugandan Shilling|UGX|0|
|Ukrainian Hryvnia|UAH|2|
|Unidad de Fomento (funds code)|CLF|4|
|Unidad de Valor Real (UVR) (funds code)|COU|2|
|United Arab Emirates Dirham|AED|2|
|United States Dollar|USD|2|
|Uruguay Peso en Unidades|UYI|0|
|Uruguayan Peso|UYU|2|
|Uzbekistan Sum|UZS|2|
|Vanuatu Vatu|VUV|0|
|Venezuelan Bolivar|VEF|2|
|Vietnamese Dong|VND|0|
|Yemeni Rial|YER|2|
|Zambian Kwacha|ZMW|2|


***

# Notifications

You can configure custom notification events for your account(s) from the merchant backoffice.  Notification events could include webhooks, email, and/or SMS.  The availibity of notification types will vary
depending upon your account type and setup.
<br/>

The most common notification used as part of your Alternate Payments integration comes in the form of a webhook.  A webhook allows you to define an HTTP callback that will be POST to when
an event occurs that you would like to be notified of.  This would typically include status changes to a payment request.   As many alternate payment flows involve redirecting your customer
to a third-party site, you have no guarantee they will be properly returned to your site once payment is completed.   For these situations you should make use of webhook notifications.

Notifications are configured by logging into the merchant backoffice and navigating to the <i>Settings --> Notifications</i> section.
<br/>
> NOTE: Access to this function is dependent upon your user account privileges.  If you are unable to access this function please contact your merchant account support representative for assistance.

![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/webhooks_sample.png)

<b>Supported Webhook Event Types</b>

|Event|Description|
|---|---|
|AP\_PAYMENT\_PROCESSING|The Alternate Payments authorization was requested but is still to be accessed by the downstream PSP.|
|AP\_PAYMENT\_COMPLETED|The Alternate Payments authorization was successful.|
|AP\_PAYMENT\_FAILED|The Alternate Payments authorization was declined or rejected.|
|AP\_PAYMENT\_CANCELLED|The Alternate Payments authorization was cancelled.  This is usually the result of a voidauth in a manual settlement transaction.|
|AP\_PAYMENT\_ERRORED|The Alternate Payments authorization has failed due to an error.|
|AP\_PAYMENT\_EXPIRED|The Alternate Payments authorization has expired.|
|AP\_REFUND\_COMPLETED|The Alternate Payments refund was successful.|
|AP\_REFUND\_FAILED|The Alternate Payments refund was declined or rejected.|
|AP\_REFUND\_CANCELLED|The Alternate Payments refund was cancelled.|
|AP\_REFUND\_ERRORED|The Alternate Payments refund has failed due to an error.|
|AP\_REFUND\_EXPIRED|The Alternate Payments refund request has expired. This will only occur if the refund was left in PENDING or PROCESSING state for an extended period of time and never finished.|
|AP\_RETURN\_COMPLETED|The downstream PSP has notified of a credit loss.|
|AP\_RETURN\_REVERSAL\_COMPLETED|The downstream PSP has notified of a late credit and is reversing a previous credit loss notice.|
|AP\_SA\_CREDIT\_COMPLETED|The Alternate Payments standalone credit was successfully completed.|
|AP\_SA\_CREDIT\_CANCELLED|The Alternate Payments standalone credit was successfully cancelled.|
|AP\_SA\_CREDIT\_ERRORED|The Alternate Payments standalone credit has failed due to an error.|
|AP\_SA\_CREDIT\_EXPIRED|The Alternate Payments standalone credit has expired. This may occur if funds are sent as a wallet payment (ie: Skrill / Neteller) and the recipient has not completed the signup process to accept the payment.|
|AP\_SA\_CREDIT\_PROCESSING|The Alternate Payments standalone credit was accepted and being processed.|
|AP\_SA\_CREDIT\_PENDING|The Alternate Payments standalone credit is pending and has not yet been accepted by the recipient.|
|AP\_SETTLEMENT\_PENDING|The Alternate Payments settlement is pending batch processing.|
|AP\_SETTLEMENT\_PROCESSING|The Alternate Payments settlement request was received and is in progress.|
|AP\_SETTLEMENT\_COMPLETED|The Alternate Payments settlement was successfully processed.|
|AP\_SETTLEMENT\_FAILED|The Alternate Payments settlement was declined or rejected.|
|AP\_SETTLEMENT\_CANCELLED|The Alternate Payments settlement was cancelled.|
|AP\_SETTLEMENT\_ERRORED|The Alternate Payments settlement has failed due to an error.|
|AP\_SETTLEMENT\_EXPIRED|The Alternate Payments settlement has expired. This typically will only occur on a settle with auth request and the auth was never completed (abandoned by user).|
|AP\_VOIDAUTH\_COMPLETED|The Alternate Payments voidauth was successfully processed.|
|AP\_VOIDAUTH\_ERRORED|The Alternate Payments voidauth was unsuccessful due to error.|
|AP\_VOIDAUTH\_FAILED|The Alternate Payments voidauth was declined.|

<b>Wehooks Signature Validation</b>

When you register an endpoint in the merchant back office, Paysafe will automatically generate an HMAC Secret Key that you can use to validate the authenticity of the notifications you receive.
Notification payloads will include a signature as part of the header response. When you receive a webhook notification, you can validate the signature by using your HMAC Secret Key using the following
logic:

digest = HMAC_SHA256 (Secret Key, UTF string)
signature = base64 (digest)

<br/>
<b><i>Sample Webhook Signature</i></b>

![](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/sample_wh_signature.png)

<br/>
> The following code example shows how to calculate the HMAC signature using Java.

```
/**
  * calculating the HMAC signature.
  *
  * digest = HMAC-SHA256 ( secret key, UTF8 string )
  *
  * signature = base64 ( digest )
  *
  * @param hmacKey key
  * @param msg message
  * @return Base64 encoded string
  */
 public static String generateHmacSignature(final String hmacKey, final String msg) {
   final byte[] key = Base64.decodeBase64(hmacKey);
   final byte[] hmac = HmacUtils.hmacSha256(key, msg.getBytes(StandardCharsets.UTF_8));
   return Base64.encodeBase64String(hmac);
 }
 ```
<br/>

# Common Objects

<a name="billingDetails" title="billingDetails Object"></a>
## billingDetails

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|street1                 |string<br/>`length<=50`  |This is the first line of the street address in the billing address.|
|street2                 |string<br/>`length<=50`  |This is the second line of the street address in the billing address, if required (e.g., apartment number).|
|city                    |string<br/>`length<=40`  |This is the city in the billing address.|
|state                   |string<br/>`length<=40`  |See Province Codes or State Codes for Canada or the United States.|
|country                 |string<br/>`length=2`    |The ISO 3166-1 alpha-2 code for the consumer's billing address (e.g., Germany = DE, JP=Japan. CA=Canada).|
|zip                     |string<br/>`length>=3,<=10`  |This is the postal/zip code in the billing address.|

```
"billingDetails": {
    "street1": "100QueenStreetWest",
    "street2": "Building 2",
    "city": "Toronto",
    "state": "ON",
    "country": "CA",
    "zip": "M5H2N2"
}
```

<a name="date" title="date Object"></a>
## date

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|day                     |string<br/>`length=2`  |<b>(Required)</b> 2-digit day, DD|
|month                   |string<br/>`length=2`  |<b>(Required)</b> 2-digit month, MM|
|year                    |string<br/>`length=4`  |<b>(Required)</b> 4-digit year, YYYY|


```
{
    "day": "01",
    "month": "12",
    "year": "2000"
}
```

<a name="error" title="error Object"></a>
## error

|Element            |Type                             |Description|
|---                |---                              |---|
|error.code         |string                           |This is the error code.<br/><i>Read Only</i>|
|error.message      |string                           |This is a description of the error.<br/><i>Read Only</i>|
|error.details      |array of string                  |This is a collection of detailed descriptions.<br/><i>Read Only</i>|
|error.fieldErrors  |[array of [object](#fieldError)] |This is a list of fields that have problems.<br/><i>Read Only</i>|
|error.links        |[array of [object](#link)]       |Links to the error documentation.<br/><i>Read Only</i>|
|id                 |string                           |This is the is the unique identifier for the related resource.<br/><i>Read Only</i>|
|merchantRefNum     |string                           |This is the identifier provided by the merchant for a transaction.<br/><i>Read Only</i>|
|riskReasonCode     |string                           |This is the associated risk reason.<br/><i>Read Only</i>|
|links              |[array of [object](#link)]       |The link to the related resource.<br/><i>Read Only</i>|

```
{
"error": {
    "code": "5068",
    "message": "Field Error(s)",
    "details": [
        "Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected."
    ],
    "fieldErrors": [{
        "field": "recipientEmail",
        "error": "john@hi@you.c.c.c.c is not a valid e-mail address."
    }, {
        "field": "transaction.amount",
        "error": "A transaction amount is required."
    }, {
        "field": "transaction.currency",
        "error": "Currency with value [USD] exceeds the maximum size of [3]."
    }]
}
```

<a name="fieldError" title="fieldError Object"></a>
## fieldError

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|field                   |string                 |Identifies the JSON request field.<br/><i>Read Only</i>|
|error                   |                       |The problem associated with field.<br/><i>Read Only</i>|

```
{
    "field": "transaction.accountProfile.email",
    "error": "Required field"
}
```

<a name="identityDocument" title="identityDocument Object"></a>
## identityDocument

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|type                    |string                 |<b>(Required)</b> One of the following options:<br/>For Individuals:<br/><ul><li>PASSPORT</li><li>IDENTITY\_CARD</li><li>DRIVING\_LICENSE</li><li>SOCIAL\_SECURITY</li><li>NATIONAL\_IDENTITY</li><li>TAX\_IDENTIFICATION</li></ul><br/><br/>For Businesses:<ul><li>REGISTRATION\_ID</li><li>ACRA</li><li>LICENSE\_NUMBER</li><li>REGISTRATION_NUMBER</li></ul>|
|documentNumber          |string<br>`length=50`  |<b>(Required)</b> This is the unique document identification number.|
|countryOfIssue          |string<br>`length=2`   |The ISO 3166-1 alpha-2 code (e.g., Germany = DE, JP=Japan. CA=Canada).|
|issueDate               |[object](#date)        |This is the issue date of the document.|
|expiryDate              |[object](#date)        |This is the expiration date of the document.|

```
{
    "type": "DRIVING_LICENSE",
    "documentNumber": "1234567890",
    "countryOfIssue": "CA",
    "issueDate": {
        "year": 2017,
        "month": 12,
        "day": 25
    }
    "expiryDate": {
        "year": 2027,
        "month": 12,
        "day": 25
}
```

<a name="link" title="link Object"></a>
## link

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|rel                     |string                 |This is the link type, allowing different endpoints to be targeted depending on the end state of the transaction. The link relation describes how this link relates to the previous call. *self* will get details of the current call.<br/><i>Read Only</i>|
|href                    |                       |This is the URL to which to send the link. If this is an HTTPS address, please ensure that your certificate is valid – otherwise, the link will cause the browser to display a certificate warning.<br/><i>Read Only</i>|

```
{
    "rel": "self",
    "url": "https://domain.com"
}
```

<a name="payment" title="payment Object"></a>
## payment

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|id                      |string                 |Unique system-generated identifier for this payment.<br/><i>Read Only</i> |
|gatewayReconciliationId |string                 |Transaction identifier that can be used to reconcile this transaction with the provider gateway.<br/><i>Read Only</i>|
|merchantRefNum          |string                 |<b>(Required)</b> This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.|
|dupCheck                |boolean                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request. Default is *true*.|
|consumerIp              |string                 |This is the consumer's IP address.|
|settleWithAuth          |boolean                |This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).<br/><b>false</b> - the request is not automatically settled, you have to post a subsequent Settlement to capture funds.<br/><b>true</b> - the request is settled (default).<br/>If the merchant wants to find out whether an authorization has been settled, they should check the *availableToSettle* element.<br/>If the amount is 0, the authorization has been fully settled.|
|amount                  |number                 |<b>(Required)</b> This is the amount of the request, in minor units. For $10.99 USD the value should be 1099.  For 1000 Japenese Yen that has no decimal values, this should be set to 1000.  For 10.139 Tunisian Dinar which has 3 decimals set this value to 10139.|
|verificationId          |string                 |This is the ID returned in the response to a [Verification request](#createverification). |
|currencyCode            |string                 |This is the currency of the payment.   Default is the account currency.<br/><i>Read Only</i>|
|availableToSettle       |number                 |This is the amount of the Authorization remaining to settle, in minor units.<br/><i>Read Only</i>|
|availableToRefund       |number                 |This is the amount of the authorization remaining to refund, in minor units.  It is visible only if no refunds are done on any of the corresponding Settlements for this payment.<br/><i>Read Only</i>|
|profile                 |[object](#profile)     |These are some details about the consumer.|
|billingDetails          |[object](#billingDetails) |These are the billing details for the payment.|
|shippingDetails         |[object](#shippingDetails) |These are the shipping details for the payment.|
|returnLinks             |[array of [object](#returnLinks)]|The URL endpoint to redirect the consumer to. You can customize the return URL based on the transaction status. 'default' is mandatory|
|txnTime                 |datetime               |ISO 8601 format (UTC) </b>This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|error                   |[object](#error)       |The associated error details for this payment, if applicable.<br/><i>Read Only</i>|
|status                  |enum                   |Options:<br/><ul><li>RECEIVED</li><li>INITIATED</li><li>PROCESSING</li><li>COMPLETED</li><li>CANCELLED</li><li>FAILED</li><li>ERROR</li><li>EXPIRED</li></ul><br/><i>Read Only</i>|
|statusReason            |enum                   |Options:<br/><ul><li>USER\_CANCELLED</li><li>MERCHANT\_CANCELLED</li><li>AUTH\_VOIDED</li><li>AUTH\_EXPIRED</li></ul><br/><i>Read Only</i>|
|gatewayResponse         |[object](#gatewayResponse)|Details from the raw response returned by the gateway.<br/><i>Read Only</i>|
|paymentType             |enum                   |<b>(Required)</b> Identifies the type of payment. <br/>Options:<br/><ul><li>BOKU</li><li>GIROPAY</li><li>INTERAC</li><li><li>NETELLER</li><li>PAYSAFECARD</li><li>PAYOLUTION</li><li>PAYPAL</li><li>RAPIDTRANSFER</li><li>SKRILL</li><li>SOFORT</li></ul>|
|[Payment Object](#paymentObjects)|object        |Payment object with additional attributes for the requested paymentType.|

```
{
  "id": "35cff450-e529-47a7-b758-d03e30f5c8ac",
  "gatewayReconciliationId": "AQAAAAAAZI",
  "merchantRefNum": "0b0ceaa3-42ad-442d-b85b-c3b70f24835d",
  "dupCheck": true,
  "consumerIp": "222.35.22.21",
  "amount": 100,
  "currencyCode": "EUR",
  "profile": {
    "firstName": "Stan",
    "lastName": "Smith",
    "email": "stan.smith@fox.com"
  },
  "billingDetails": {
    "street1": "Street line 1",
    "street2": "Street line 2",
    "city": "Calgary",
    "state": "AB",
    "country": "CA",
    "zip": "T3H3L3"
  },
  "returnLinks": [
    {
      "rel": "default",
      "href": "https://mysite.com/return"
    }
  ],
  "paymentType": "SOFORT",
  "sofort": {
    "descriptor": "sampledesc",
    "sepa": {
      "country": "NL"
    }
  }
}
```

<a name="paymentHandle" title="paymentHandle Object"></a>
## paymentHandle

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|id                      |string                 |Unique system-generated identifier for this paymentHandle.<br/><i>Read Only</i> |
|paymentHandleToken      |string                 |This is the existing payment handle id, from which payment instrument and profile details has to be fetched.<br/><i>Read Only</i>|
|merchantRefNum          |string                 |<b>(Required)</b> This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.|
|dupCheck                |boolean                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request. Default is *true*.|
|customerIp              |string                 |This is the consumer's IP address.|
|amount                  |number                 |<b>(Required)</b> This is the amount of the request, in minor units. For $10.99 USD the value should be 1099.  For 1000 Japenese Yen that has no decimal values, this should be set to 1000.  For 10.139 Tunisian Dinar which has 3 decimals set this value to 10139.|
|currencyCode            |string                 |This is the currency of the payment.   Default is the account currency.<br/><i>Read Only</i>|
|profile                 |[object](#profile)     |These are some details about the consumer.|
|billingDetails          |[object](#billingDetails) |These are the billing details for the payment.|
|shippingDetails         |[object](#shippingDetails) |These are the shipping details for the payment.|
|returnLinks             |[array of [object](#returnLinks)]|The URL endpoint to redirect the consumer to. You can customize the return URL based on the transaction status. 'default' is mandatory|
|txnTime                 |datetime               |ISO 8601 format (UTC) </b>This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|error                   |[object](#error)       |The associated error details for this payment, if applicable.<br/><i>Read Only</i>|
|status                  |enum                   |Options:<br/><ul><li>RECEIVED</li><li>INITIATED</li><li>PROCESSING</li><li>COMPLETED</li><li>CANCELLED</li><li>FAILED</li><li>ERROR</li><li>EXPIRED</li></ul><br/><i>Read Only</i>|
|statusReason            |enum                   |Options:<br/><ul><li>USER\_CANCELLED</li><li>MERCHANT\_CANCELLED</li><li>AUTH\_VOIDED</li><li>AUTH\_EXPIRED</li></ul><br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|usage                   |enum                   |Options:<br/><ul><li>SINGLE\_USE - The payment handle can be used only once, it gets expired after due time</li><li>MULTI\_USE - The payment handle can be used multiple times for items like recurring/subscription payments.</li></ul><i>Read Only</i>|
|action                  |enum                   |Options:<br/><ul><li>NONE</li><li>REDIRECT</li><li>AUTHENTICATE</li></ul><i>Read Only</i>|
|executionMode           |enum                   |Options:<br/><ul><li>ASYNCRONOUS</li><li>SYNCRONOUS</li></ul><i>Read Only</i>|
|timeToLiveSeconds       |long                   |This is the period of time in seconds that the single use token is valid before expiration.<br/><i>Read Only</i>|
|paymentType             |enum                   |<b>(Required)</b> Identifies the type of payment. <br/>Options:<br/><ul><li>NETELLER</li><li>PAYSAFECARD</li><li>PAYSAFECASH</li><li>SKRILL</li></ul>|
|[Payment Object](#paymentObjects)|object        |Payment object with additional attributes for the requested paymentType.|

```
{
    "id": "3bf8e951-ed05-4368-be3d-c676b49d7d77",
    "paymentHandleToken": "PHTvbRmDgFbdo8pR",
    "merchantRefNum": "6839d7b4-6be6-41ab-b07f-e3f1350149f2",
    "status": "INITIATED",
    "dupCheck": false,
    "paymentType": "PAYSAFECASH",
    "liveMode": true,
    "usage": "SINGLE_USE",
    "action": "REDIRECT",
    "executionMode": "ASYNCHRONOUS",
    "amount": 4000,
    "currencyCode": "EUR",
    "customerIp": "10.123.10.2",
    "timeToLiveSeconds": 345599,
    "gatewayResponse": {
        "id": "4186e034-efca-4c33-9f19-f05f7f43b6cf",
        "processor": "PAYSAFECARD"
    },
    "returnLinks": [
        {
            "rel": "default",
            "href": "http://urlecho.appspot.com/echo?status=200&Content-Type=text%2Fhtml&body=default"
        },
        {
            "rel": "on_cancelled",
            "href": "http://urlecho.appspot.com/echo?status=200&Content-Type=text%2Fhtml&body=on_cancelled"
        }
    ],
    "txnTime": "2019-01-17T21:13:17Z",    
    "updatedTime": "2019-01-17T21:13:17Z",
    "statusTime": "2019-01-17T21:13:17Z",
    "paysafecash": {
        "consumerId": "merchantclientid5HzDvoZSodKDJ7X7VQKrtestAutomation",
        "minAgeRestriction": 18,
        "kycLevelRestriction": "SIMPLE",
        "countryRestriction": "DE"
    }    
}
```

<a name="profile" title="profile Object"></a>
## profile

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|title                   |string                   |This is the consumer's title, e.g. Ms.|
|firstName               |string<br/>`min=2,length<=80`  |<b>(Required)</b>This is the consumer's first name.|
|lastName                |string<br/>`min=2,length<=80`  |<b>(Required)</b>This is the consumer's last name.|
|email                   |string<br/>`min=6,length<=128` |<b>(Required)</b>This is the consumer's email address.|
|dateOfBirth             |[object](#date)          |This is the date of birth of the consumer associated to this profile.|
|gender                  |enum                     |Options:<ul><li>M &ndash; Male</li><li>F &ndash; Female</li><li>O &ndash; Other</li><li>N &ndash; Not Specified</li></ul>|
|identityDocuments       |array of [object](#identityDocument) | Identity documents associated to this profile.|
|kycStatus               |enum                     |This is the KYC status of the consumer at the merchant.<br/>Options:<ul><li>UNVERIFIED - consumer details are not verified</li><li>PARTIALLY_VERIFIED - some consumer details are verified (ie: name and dob)</li><li>VERIFIED - consumer is fully verified (name, dob, address, phone, email)</li></ul>|
|phone                   |string<br/>`max=40`      |This is the consumer's primary phone.|
|cellphone               |string                   |This is the consumer's cell phone.|
|locale                  |enum                     |This is the ISO language code representing the preferred language for this profile.|

```
{
    "title": "Mr",
    "firstName": "John",
    "lastName": "Smith",
    "email": "jsmith@email.com",
    "dateOfBirth": {
        "day": "31",
        "month": "10",
        "year": "1995"
    },
    "gender": "M",
    "phone": "14032221234",
    "cellPhone": "14033332345",
    "ip": "23.51.55.523",
    "locale": "en"
}
```

<a name="recipient" title="recipient Object"></a>
## recipient

|Element                 |Type                         |Description |
|---                     |---                          |--- |
|profile                 |object                       |This is the recipients profile.|
|billingDetails          |object                       |This is the recipients billing details.|
|shippingDetails         |                             |This is the recipients shipping details.|
|identityDocuments       |array of [object](#identityDocument) | Identity documents associated to this recipient.|
|\<paymentVehicle\>      |object                       |The associated payment vechicle.  ie: bank account detail for online banking payment and/or credit.|

```
{
    "recipient": {
        "profile": {
            "title": "Mr",
            "firstName": "John",
            "lastName": "Smith",
            "email": "jsmith@email.com",
            "dateOfBirth": {
                "day": "31",
                "month": "10",
                "year": "1995"
            },
            "gender": "M",
            "phone": "14032221234",
            "cellphone": "14033332345",
            "ip": "23.51.55.523",
            "locale": "en",
            "identityDocuments": [{
                    "type": "DRIVING_LICENSE",
                    "idNumber": "1234567890"
                },
                {
                    "type": "PASSPORT",
                    "idNumber": "1234567890"
                }
            ]
        },
        "billingDetails": {},
        "shippingDetails": {}        
    }
}
```

<a name="refund" title="refund Object"></a>
## refund

|Element                 |Type                         |Description |
|---                     |---                          |--- |
|id                      |string<br/>`length<=36`      |This is the ID returned in the response. This ID can be used for future associated requests.<br/><i>Read Only</i>|
|gatewayReconciliationId |string                       |Transaction identifier that can be used to reconcile this transaction with the provider gateway.<br/><i>Read Only</i>|
|merchantRefNum          |string<br/>`length<=255`     |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|amount                  |number<br/>`max=99999999999` |This is the amount of the request, in minor units. For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.|
|currencyCode            |string<br/>`length=3`        |Currency code of the original payment.|
|paymentType             |enum                         |Payment type of the original payment.|
|txnTime                 |datetime                     |ISO 8601 format (UTC) This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`.<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|error                   |[object](#error)             |The associated error details for this Refund, if applicable.<br/><i>Read Only</i>|
|status                  |enum                         |Options:<br/><ul><li>RECEIVED</li><li>PROCESSING</li><li>COMPLETED</li><li>CANCELLED</li><li>FAILED</li><li>ERROR</li><li>EXPIRED</li></ul><br/><i>Read Only</i>|
|gatewayResponse         |[object](#gatewayResponse)   |Details from the raw response returned by the gateway.<br/><i>Read Only</i>|

```
{
  "id": "6565bce8-9ae2-4359-bc7c-48c2e560810b",
  "gatewayReconciliationId": "QAAAAABHCI",  
  "merchantRefNum": "xyz",
  "amount": 400,
  "currencyCode": "EUR",
  "paymentType": "SOFORT",
  "txnTime": "2016-02-24T08:39:39Z",
  "status": "COMPLETED",
  "gatewayResponse": {
    "id": "9bcaa7f0dba44c64981881401794abby",
    "code": "000.100.110",
    "description": "Request successfully processed in 'Merchant in Integrator Test Mode'",
    "processor": "PAYON",
    "paymentType": "RF"
  }
}
```

<a name="return" title="return Object"></a>
## return

|Element                 |Type                         |Description |
|---                     |---                          |--- |
|id                      |string                       |This is the ID returned in the response.<br/><i>Read Only</i>|
|gatewayReconciliationId |string                       |Transaction identifier that can be used to reconcile this transaction with the provider gateway.<br/><i>Read Only</i>|
|amount                  |number<br/>`max=99999999999` |This is the amount of the request, in minor units.For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.|
|currencyCode            |string<br/>`length=3`        |Currency code of the original payment.|
|paymentType             |enum                         |Payment type of the original payment.|
|txnTime                 |datetime                     |ISO 8601 format (UTC) This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`.<br/><i>Read Only</i>|
|updatedTime             |datetime                     |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime                     |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|status                  |enum                         |Options:<br/><ul><li>COMPLETED</li></ul><br/><i>Read Only</i>|

```
{
    "id": "30381792-1237-4868-8fd3-73196e94d009",
    "gatewayReconciliationId": "QAAAAABHCI",    
    "amount": "2399",
    "currencyCode": "EUR",
    "paymentType": "SOFORT",
    "tnxTime": "2017-03-14T20:07:39Z",
    "status": "COMPLETED"
}
```

<a name="returnReversal" title="returnReversal Object"></a>
## returnReversal

|Element                 |Type                         |Description |
|---                     |---                          |--- |
|id                      |string                       |This is the ID returned in the response.<br/><i>Read Only</i>|
|gatewayReconciliationId |string                       |Transaction identifier that can be used to reconcile this transaction with the provider gateway.<br/><i>Read Only</i>|
|amount                  |number<br/>`max=99999999999` |This is the amount of the request, in minor units.For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.|
|currencyCode            |string<br/>`length=3`        |Currency code of the original payment.|
|paymentType             |enum                         |Payment type of the original payment.|
|txnTime                 |datetime                     |ISO 8601 format (UTC) This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`.<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|status                  |enum                         |Options:<br/><ul><li>COMPLETED</li></ul><br/><i>Read Only</i>|

```
{
    "id": "30381792-1237-4868-8fd3-73196e94d009",
    "gatewayReconciliationId": "QAAAAABHCI",    
    "amount": "2399",
    "currencyCode": "EUR",
    "paymentType": "SOFORT",
    "tnxTime": "2017-03-14T20:07:39Z",
    "status": "COMPLETED"
}
```

<a name="returnLink" title="returnLink Object"></a>
## returnLink

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|rel                     |string<br/>`length=X`  |Options:<ul><li><b>default</b> - The default return URL, which will be used if specific status return URL is not defined.</li><li><b>on\_pending</b></li><li><b>on\_completed</b></li><li><b>on\_failed</b></li><li><b>on\_cancelled</b></li><li><b>on\_error</b></li>|
|href                    |string<br/>`length=X`  |The TLS secured endpoint to return the consumer to.|

```
{
  "rel": "default",
  "href": "https://mysite.com/return"
}
```

<a name="settlement" title="settlement Object"></a>
## settlement

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|id                      |string                 |This is the ID returned in the response. This ID can be used for future associated requests.<br/><i>Read Only</i>|
|gatewayReconciliationId |string                 |Transaction identifier that can be used to reconcile this transaction with the provider gateway.<br/><i>Read Only</i>|
|merchantRefNum          |string                 |<b>(Required)</b> This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.|
|dupCheck                |boolean                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request. Default is *true*.|
|amount                  |number                 |<b>(Required)</b> This is the amount of the request, in minor units.|
|currencyCode            |string                 |This is the currency of the payment.|
|paymentType             |enum                   |Payment type of the original payment.|
|[Payment Object](#paymentObjects)|object        |Optional payment object depending upon the paymentType.|
|txnTime                 |datetime               |This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`.<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|availableToRefund       |number                 |This is the amount of this Settlement that is available to Refund, in minor units.<br/><i>Read Only</i>|
|error                   |[object](#error)       |The associated error details for this Settlement (if applicable).<br/><i>Read Only</i>|
|status                  |enum                   |Options:<br/><ul><li>RECEIVED</li><li>PENDING</li><li>PROCESSING</li><li>COMPLETED</li><li>CANCELLED</li><li>FAILED</li><li>ERROR</li><li>EXPIRED</li></ul><br/><i>Read Only</i>|
|gatewayResponse         |[object](#gatewayResponse)|Details from the raw response returned by the gateway.<br/><i>Read Only</i>|


```
{
    "id": "30381792-1237-4868-8fd3-73196e94d009",
    "gatewayReconciliationId": "QAAAAABHCI",
    "merchantRefNum": "1489522059",
    "dupCheck": true,
    "amount": 100,
    "currencyCode": "EUR",
    "paymentType": "PAYOLUTION",
    "txnTime": "2017-03-14T20:07:39Z",
    "availableToRefund": 100,
    "status": "COMPLETED",
    "gatewayResponse": {
        "id": "d3188d9c-f81a-4958-8505-03764bf577f2",
        "code": "0.0.0",
        "description": "The request was processed successfuly.",
        "processor": "PAYOLUTION",
        "paymentType": "DB"
    }
}
```

<a name="shippingDetails" title="shippingDetails Object"></a>
## shippingDetails

|Element                 |Type                    |Description |
|---                     |---                     |--- |
|carrier                 |enum                    |This is the shipment carrier. Possible values are:<ul><li>APC – APC Overnight</li><li>APS – Anpost</li><li>CAD – Canada Postal Service</li><li>DHL – DHL</li><li>FEX – Fedex</li><li>RML – Royal Mail</li><li>UPS – United Parcel Service</li><li>USPS – United States Postal Service</li><li>CLK – CityLink</li><li>EMS – EMS (US Postal Service)</li><li>NEX – Nexworldwide</li><li>OTHER|</li></ul>|
|shipMethod              |enum                    |This is the method of shipment. Possible values are:<ul><li>N – Next Day/Overnight</li><li>T – Two-Day Service</li><li>C – Lowest Cost</li><li>O – Other</li></ul>|
|recipientName           |string<br/>`length=255` |This is the name of the person receiving the goods.|
|street                  |string<br/>`length<=50` |This is the recipient's street address.|
|street2                 |string<br/>`length<=50` |This is the second line of the street address in the shipping address, if required (e.g., apartment number).|
|city                    |string<br/>`length<=40` |This is the city in which the recipient resides.|
|state                   |string                  |See Province Codes or State Codes for Canada or the United States.|
|country                 |enum                    |The ISO 3166-1 alpha-2 code for the consumer's shipping address (e.g. Germany = DE, JP=Japan. CA=Canada)|
|zip                     |string                  |This is the recipient's post code.|

```
"shippingDetails": {
    "carrier":"UPS",
    "shipMethod":"N",
    "recipientName":"Jane Smith",
    "street":"100 Queen Street West",
    "city":"Toronto",
    "state":"ON",
    "country":"CA",
    "zip":"M5H 2N2"
}
```

<a name="standaloneCredit" title="standaloneCredit Object"></a>
## standaloneCredit

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|id                      |string                 |This is the ID returned in the response. This ID can be used for future associated requests.<br/><i>Read Only</i> |
|gatewayReconciliationId |string                 |Transaction identifier that can be used to reconcile this transaction with the provider gateway.<br/><i>Read Only</i>|
|merchantRefNum          |string                 |<b>(required)</b> This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.|
|dupCheck                |boolean                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request. Default is *true*.|
|consumerIp              |string                 |This is the consumer's IP address.|
|amount                  |number                 |This is the amount of the request, in minor units. For $10.99 USD the value should be 1099.  For 1000 Japanese yen, which has no decimal values, this should be set to 1000.  For 10.139 Tunisian Dinar which has 3 decimals set this value to 10139.|
|currencyCode            |string                 |This is the currency of the payment.   Default is the account currency.|
|paymentType             |enum                   |<b>(Required)</b>Identifies the type of payment. <br/>Options:<br/><ul><li>INSTAREM</li><li>SKRILL</li></ul>|
|profile                 |[object](#profile)     |These are some details about the customer.|
|billingDetails          |[object](#billingDetails) |These are the billing details for the payment.|
|txnTime                 |datetime               |ISO 8601 format (UTC) </b>This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|error                   |[object](#error)       |The associated error details for this payment (if applicable).<br/><i>Read Only</i>|
|status                  |enum                   |Options:<br/><ul><li>RECEIVED</li><li>PENDING</li><li>PROCESSING</li><li>COMPLETED</li><li>CANCELLED</li><li>FAILED</li><li>ERROR</li><li>EXPIRED</li></ul><br/><i>Read Only</i>|
|gatewayResponse         |[object](#gatewayResponse)|Details from the raw response returned by the gateway.<br/><i>Read Only</i>|
|[Payment Object](#paymentObjects)|object        |Payment object with additional attributes for the requested paymentType.|

```
{
    "id": "21fa4850-0c82-4c67-997d-2c9654de91cd",
    "gatewayReconciliationId": "AQAAAAAAZI",    
    "merchantRefNum": "1520357063",
    "dupCheck": true,
    "amount": 100,
    "currencyCode": "EUR",
    "paymentType": "SKRILL",
    "profile": {
        "firstName": "merchant",
        "lastName": "simulator",
        "email": "cc@cc.com"
    },
    "billingDetails": {
        "street1": "string",
        "street2": "string",
        "zip": "string",
        "city": "string",
        "country": "NL",
        "state": "FL"
    },
    "returnLinks": [
        {
            "rel": "on_cancelled",
            "href": "http://www.google.ca"
        },
        {
            "rel": "default",
            "href": "http://www.amazon.ca"
        }
    ],
    "skrill": {
        "consumerId": "john.doe@email.com",
        "emailSubject": "Email Subject",
        "emailMessage": "Note for email here."
    },
    "txnTime": "2018-03-06T17:24:23Z",
    "status": "COMPLETED",
    "gatewayResponse": {
        "status": "2",
        "sid": "58e330448aa4cc4e913fd690d3664c6f",
        "processor": "SKRILL_QCO"
    },
    "links": [
        {
            "rel": "self",
            "href": "http://api.paysafe.com/alternatepayments/v1/accounts/1520356513/standalonecredits/21fa4850-0c82-4c67-997d-2c9654de91cd"
        }
    ]
}
```

<a name="standaloneCreditBatch" title="standaloneCreditBatch Object"></a>
## standaloneCreditBatch

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|id                      |string                 |This is the ID returned in the response. This ID can be used for future associated requests.<br/><i>Read Only</i> |
|merchantRefNum          |string                 |<b>(required)</b> This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.|
|dupCheck                |boolean                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request. Default is *true*.|
|totalAmount             |number                 |<b>(required)</b> This is the total sum of all amounts of batch items, in minor units.<br/>For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.<br/><b>NOTE:</b> If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.|
|currencyCode            |string                 |This is the currency of the merchant account and is returned in the response. |
|paymentType             |enum                   |Payment type for this request.|
|profile                 |[object](#profile)     |These are some details about the customer.|
|billingDetails          |[object](#billingDetails) |These are the billing details for the payment.|
|txnTime                 |datetime               |ISO 8601 format (UTC) </b>This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|error                   |[object](#error)       |The associated error details for this payment (if applicable).<br/><i>Read Only</i>|
|status                  |enum                   |Options:<br/><ul><li>RECEIVED</li><li>PENDING</li><li>PROCESSING</li><li>COMPLETED - Some standalone credits were successfully processed.</li><li>FAILED-All standalone credits have failed</li><li>ERROR</li></ul><br/><i>Read Only</i>|
|standaloneCredits       |[object](#standaloneCredits)|<b>(required)</b> The collection of standalone credits to be processed.|

```
{
   "merchantReferenceNum":"abc",
   "paymentType":"PAYPAL",
   "numberOfItems" : 2,
   "totalAmount" : 400,
   "currencyCode": "EUR"
   "standaloneCredits":[
      {
         "merchantRefNum":"XYZ3331102",
         "amount":300,
         "currencyCode": "EUR",
         "paymentType":"PAYPAL",
         "consumerIp":"206.172.46.138",
         "paypal":{
            "...":"john.doe@mail.com",
            "..."
         }
      },
      {
         "merchantRefNum":"DD1141",
         "amount":100,
         "currencyCode": "EUR",
         "consumerIp":"206.172.46.131",
         "paypal":{
            "...":"jeff.smith@mail.com",
            "..."
         }
      }
   ]
}
```

<a name="verification" title="verification Object"></a>
## verification

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|id                      |string                 |Unique system-generated identifier for this request.<br/><i>Read Only</i> |
|merchantRefNum          |string                 |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.|
|dupCheck                |boolean                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request. Default is *true*.|
|consumerIp              |string                 |This is the consumer's IP address.|
|amount                  |number                 |This is the amount of the request, in minor units. For $10.99 USD the value should be 1099.  For 1000 Japenese Yen that has no decimal values, this should be set to 1000.  For 10.139 Tunisian Dinar which has 3 decimals set this value to 10139.<br/>**Note:** Although the *amount* field is required for a Verification request, no amount is processed.|
|payolution              |[object](#payolution)  |This is the payolution payment object. |
|paymentType             |enum                   |Identifies the type of payment instrument. <br/>Options:<br/><ul><li>PAYOLUTION</li></ul>|
|profile                 |[object](#profile)     |These are some details about the consumer.|
|billingDetails          |[object](#billingDetails) |These are the billing details for the request.|
|shippingDetails         |[object](#shippingDetails) |These are the shipping details for the request.|
|currencyCode            |string                 |This is the currency of the request.   Default is the account currency.|
|returnLinks             |[object](#returnLinks) |The url endpoint to redirect the consumer to. You can customize the return url based on the transaction status. 'default' is mandatory.|
|txnTime                 |datetime               |ISO 8601 format (UTC) </b>This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|error                   |[object](#error)       |The associated error details for this request, if applicable. <br/>*Read Only* |
|status                  |enum                   |Options:<br/><ul><li>RECEIVED</li><li>FAILED</li><li>COMPLETED</li><li>ERROR</li></ul><br/><i>Read Only</i>|
|gatewayResponse         |[object](#gatewayResponse)|Details from the raw response returned by the gateway.<br/><i>Read Only</i>|

```
{
  "merchantRefNum": "0b0ceaa3-42ad-442d-b85b-c3b70f24835d",
  "dupCheck": true,
  "amount": 100,
  "currencyCode": "EUR",
  "profile": {
    "firstName": "Stan",
    "lastName": "Smith",
    "email": "stan.smith@fox.com"
  },
  "billingDetails": {
    "street1": "Street line 1",
    "street2": "Street line 2",
    "city": "Calgary",
    "state": "AB",
    "country": "CA",
    "zip": "T3H3L3"
  },
  "returnLinks": [
    {
      "rel": "default",
      "href": "https://mysite.com/return"
    }
  ],
  "paymentType": "SOFORT",
  "sofort": {
    "descriptor": "sampledesc",
    "sepa": {
      "bankName": "ing",
      "country": "NL"
    }
  }
}
```

<a name="voidauth" title="voidAuth Object"></a>
## voidauth

|Element                 |Type                   |Description |
|---                     |---                    |--- |
|id                      |string                 |This is the ID returned in the response. This ID can be used for future associated requests.<br/><i>Read Only</i> |
|merchantRefNum          |string                 |<b>(Required)</b> This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.|
|dupCheck                |boolean                |This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request. Default is *true*.|
|amount                  |number                 |This is the amount of the request, in minor units. For $10.99 USD the value should be 1099.  For 1000 Japanese yen, which has no decimal values, this should be set to 1000.  For 10.139 Tunisian Dinar which has 3 decimals set this value to 10139.|
|currencyCode            |string                 |This is the currency of the payment.   Default is the account currency.|
|paymentType             |enum                   |This identifies the type of payment. If not included, it is inferred from the authorization that is being voided (reversed).<br/>Options:<br/><ul><li>PAYOLUTION</li></ul>|
|txnTime                 |datetime               |ISO 8601 format (UTC) This is the date and time the transaction was processed, e.g., `2014-01-26T10:32:28Z`.<br/><i>Read Only</i>|
|updatedTime             |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|statusTime              |datetime               |ISO 8601 format (UTC) </b>This is the date and time the resource status was last updated, e.g., `2014-01-26T10:32:28Z`<br/><i>Read Only</i>|
|error                   |[object](#error)       |The associated error details for this payment (if applicable).<br/><i>Read Only</i>|
|status                  |enum                   |Options:<br/><ul><li>RECEIVED</li><li>COMPLETED</li><li>FAILED</li><li>ERROR</li><br/><i>Read Only</i>|
|gatewayResponse         |[object](#gatewayResponse)|Details from the raw response returned by the gateway.<br/><i>Read Only</i>|


```
{
  "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
  "merchantRefNum":"merchant ABC-123-voidauths",
  "amount":898,
  "currencyType" : "CAD",
  "txnTime":"2014-03-14T15:12:18Z",
  "status":"COMPLETED"
}
```

# Payment Vehicle Objects

<a name="ach" title="ach Object"></a>
## ach

|Element                 |Type                          |Description |
|---                     |---                           |--- |
|accountNumber           |string<br/>`length>=4<=17`    |This is the bank account number.|
|accountHolderName       |string<br/>`length<=50`       |This is the name of the customer or company.|
|accountType             |enum<br/>                     |This is the bank account type. <br/>Options:<br/><ul><li>SAVINGS</li><li>CHECKING</li><li>LOAN</li></ul>|
|routingNumber           |string<br/>`length=9`         |For USD accounts, this is the 9 digit routing number of the bank.|
|bankName                |string<br/>`length<=255`      |This is the name of the bank.|
|bic                     |string<br/>`length=8 OR 11`   |This is the bank identification code or SWIFT code.|

```
"ach": {
    "accountNumber": "988772192", 
    "accountHolderName": "XYZ Company",
    "bankName": "Bank of America",
    "accountType": "CHECKING",
    "routingNumber": "211589828",
    "bic": "USFINV34"
}
```

<a name="bacs" title="bacs Object"></a>
## bacs

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|accountNumber           |string<br/>`length=8`    |This is the bank account number.|
|accountHolderName       |string<br/>`length<=18`  |This is the name of the consumer or company.|
|sortCode                |string<br/>`length=6`    |This is the sort code for the consumers bank account.|
|bankName                |string<br/>`length<=255` |This is the name of the bank.|

```
"bacs": {
    "accountNumber": "98877219",
    "accountHolderName": "XYZ Company",
    "sortCode": "321654",
    "bankName": "Lloyds"
}
```

<a name="becs" title="becs Object"></a>
## becs

Australia specific banking scheme.

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|accountNumber           |string<br/>`length<=10`  |This is the bank account number.|
|accountHolderName       |string<br/>`length<=50`  |This is the name of the consumer or company.|
|bankName                |string<br/>`length<=255` |This is the name of the bank.|
|bankStateBranch         |string<br/>`length=6`    |This is the 6-digit branch code assigned to the bank by a central bank, a bank supervisory body or a bank association.|

```
"becs": {
        "accountNumber" : "1234567890",
        "accountHolderName" : “John Doe”,
        "bankStateBranch": "033088",
        "bankName": " Westpac Banking Corporation"
}
```

<a name="eft" title="eft Object"></a>
## eft

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|accountNumber           |string<br/>`length=4-12` |This is the bank account number.|
|accountHolderName       |string<br/>`length<=50`  |This is the name of the consumer or company.|
|transitNumber           |string<br/>`length=5`    |This is the 5-digit transit number of the consumers bank account.|
|institutionId           |string<br/>`length=3`    |This is the 3-digit institution number of the consumers bank branch.|
|bankName                |string<br/>`length<=255` |This is the name of the bank.|

```
"eft": {
    "accountNumber": "336612",
    "accountHolderName": "XYZ Company",
    "transitNumber": "22446",
    "institutionId": "001"
}
```

<a name="indiaFinancialSystem" title="indiaFinancialSystem Object"></a>
## indiaFinancialSystem

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|accountNumber           |string<br/>`length=6-18` |This is the bank account number.|
|accountHolderName       |string<br/>`length<=50`  |This is the name of the customer or company.|
|ifsc                    |string<br/>`length=11`   |This is the india financial system bank code.|
|bankName                |string<br/>`length<=255` |This is the name of the bank.|

```
"indiaFinancialSystem": {
       "accountNumber": "435645645666",
       "accountHolderName": "Mahesh J",
       "ifsc": "ABHY0065204",
       "bankName": "ABHYUDAYA COOPERATIVE BANK LIMITED"
}
```

<a name="regionalBankingSystem" title="regionalBankingSystem Object"></a>
## regionalBankingSystem

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|accountNumber           |string<br/>`length<=34`  |This is the bank account number.|
|accountHolderName       |string<br/>`length<=255` |This is the name of the customer or company.|
|bankName                |string<br/>`length<=255` |This is the name of the bank.|
|bankCode                |string<br/>`length<=11`  |This is the bank code assigned to the bank by a central bank, a bank supervisory body or a bank association.|
|branchCode              |string<br/>`length<=11`  |This is the branch code assigned to the bank by a central bank, a bank supervisory body or a bank association.|
|bic                     |string<br/>`length=8 OR 11`  |This is the bank identification code or SWIFT code.|

```
"regionalBankingSystem": {
    "accountNumber" : "2353948539487",
    "accountHolderName" : "John Doe",
    "bankCode" : "7010",
    "branchCode" : "001",
    "bic": "DEFGDXXX",
    "bankName" : "Bank of Ceylon"
}
```

<a name="sepa" title="sepa Object"></a>
## sepa

|Element                 |Type                     |Description |
|---                     |---                      |--- |
|accountHolderName       |string<br/>`length<=50`  |This is the name of the consumer or company.|
|bankName                |string                   |The name of the bank.|
|country                 |string<br/>`length=2`    |The ISO 3166-1 alpha-2 code for the consumer's country of residence (e.g., Germany = DE, JP=Japan. CA=Canada).|
|bic                     |string<br/>`length=8-11` |This is the Bank Identifier Code for the consumer's bank account.|
|iban                    |string<br/>`length=1-34` |This is the International Bank Account Number for the consumer's bank account.|

```
"sepa": {
    "accountHolderName": "John Doe",
    "bankName": "ING",
    "country": "NL",
    "bic": "ABNANL2APIP",
    "iban": "DE89370400440532013000"
}
```

<a name="paymentObjects" title="PaymentType Objects"></a>
# Payment Type Objects

PaymentType objects are used to define additional values that can be supplied depending on your request type.
These objects are nested as part of your Payment, Settlement, Verification or Standalone Credit request.
<br/><br/>

__**LEGEND**__
|                |    |
|:---:           |---           |
|**Symbol**      |**Definition**|
|&#9862;         |Optional      |
|&#9864;         |Required      |
|&#8210;         |Not Applicable|
|                |              |
|**Abbreviation**|**Request Type**|
|RG              |Registration  |
|V               |Verification  |
|PH (P)          |PaymentHandle for Payment |
|PH (SC)         |PaymentHandle for StandaloneCredit |
|P               |Payment       |
|S               |Settlement    |
|SC              |Standalone Credit|
|RF              |Refund        |

> Please contact your Paysafe Support to request additional payment methods for your account.

<a name="boku" title="Boku Payment Object"></a>
## boku 

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/boku.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment, Return</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>UK, SE, CH, NO</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>GBP, SEK, CHF, NOK</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>


Boku is a leading direct carrier billing mobile payments company that is integrated with hundreds of mobile operators all over the world.
<br/><br/>
The following values should be passed in your Boku <b>Payment (P)</b> request.

|Element                 |Type                    |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                     |---                     |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                        |**Request Type**        |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|descriptor              |string<br/>`length<=20` |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |Descriptor to display on customer's statement.|
|consumerId              |string<br/>`length<=255`|&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |Consumer identifier in merchant system.  This value is used to perform payment transaction risk checks which are intended to limit fraud targeted at using many MSISDNs by the same consumer account in a merchant system.|
|consumerCountry         |string                  |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |The ISO 3166-1 alpha-2 code for the country of registration for the customer's mobile phone (e.g., Germany = DE, JP=Japan. CA=Canada).|
|consumerMobilePhone     |string                  |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |The customer's mobile phone number.|

```
"boku": {
    "descriptor": "custom descriptor",
    "consumerId": "CUS_12345678",
    "consumerCountry": "GB",
    "consumerMobilePhone": "44292102029"
}
```

<a name="giropay" title="Giropay Payment Object"></a>
## giropay

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/giropay.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>DE</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>EUR</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>


Giropay is an interbank system and the official implementation of German banks for online bank payments.
<br/><br/>
The following custom attributes can be passed in your Giropay <b>Payment (P)</b> request.

|Element                 |Type                    |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                     |---                     |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                        |**Request Type**        |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|descriptor              |string<br/>`length<=16` |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |This is the merchant descriptor that will be displayed on the customer's bank statement.|
|sepa                    |[object](#sepa)         |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The consumer's SEPA bank account details.|
|sepa.accountHolderName  |string                  |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The account holder's name.|
|sepa.bic                |string                  |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The Bank Identifier Code (BIC) of the account.|
|sepa.iban               |string                  |&#8210;           |&#8210;          |&#8210;                  |&#9862;                |&#8210;           |&#8210;           |&#8210;           |The International Bank Account Number (IBAN) of the account.|

```
"giropay": {
    "descriptor": "custom descriptor",
    "sepa": {
        "accountHolderName": "John Doe",
        "bic": "ABNANL2APIP",
        "iban": "DE89370400440532013000"
    }
}
```

<a name="instarem" title="INSTAREM Payment Object"></a>
## instarem 

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/instarem.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Standalone Credit, Standalone Credit Return</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>
        <ul>
            <li>Sri Lanka, Hong Kong, Thailand, Indonesia, Philippines, Bangladesh, Nepal, Singapore, Malaysia, Vietnam, New Zealand, Norway, Sweden, Denmark (regionalBankingObject)</li>
            <li>India (indiaFinanciaSystem)</li>
            <li>EU countries(without Sweden and Denmark), Montenegro, Switzerland (sepa)</li>
            <li>UK (bacs)</li>
            <li>Australia (becs)</li>
            <li>Montenegro</li>
        </ul>
    </td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>
        <ul>
            <li>HKD Hong Kong</li>
            <li>LKR Sri Lanka</li>
            <li>MYR Malaysia</li>
            <li>EUR Greece, Montenegro</li>
            <li>THB Thailand</li>
            <li>PKR Pakistan</li>
            <li>VND Vietnam</li>
            <li>IDR Indonesia</li>
            <li>PHP Phillipines</li>
            <li>SGD Singapore</li>
            <li>BDT Bangladesh</li>
            <li>NPR Nepal</li>
            <li>AUD Australia</li>
            <li>CAD Canada</li>
            <li>INR India</li>
        </li>
    </td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Asyncronous</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>


<br/><br/>
The following custom attributes can be passed in your Instarem <b>Standalone Credit (SC)</b> request.

|Element                        |Type                          |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                            |---                           |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                               |**Request Type**              |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|descriptor                     |string<br/>`length<=200`      |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#9864;           |&#8210;           |This is the merchant descriptor that will be displayed on the customer's bank statement.|
|purposeCode                    |[enum](#instaremPurposeCodes) |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#9864;           |&#8210;           |This is the purpose code for the payment from the following list - [Instarem Purpose Codes](#instaremPurposeCodes)|
|senderRecipientRelationship    |string<br/>`length<=255`      |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#9862;           |&#8210;           |A text description of the relationship between the sender and the recipient e.g. "Employee".<br/>Note: This is mandatory for Nepal|
|sourceOfFunds                  |string<br/>`length<=255`      |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#9862;           |&#8210;           |A text description of the source of funds e.g. "Salary".<br/>Note: This is mandatory for South Korea.|
|consumerId                     |string<br/>`length<=255`      |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#9862;           |&#8210;           |Unique id to identify the sender.<br/>Note: This is mandatory for South Korea.|

```
"instarem": {
    "descriptor": "Wallet deposit",
    "purposeCode": "IR001"
}
```

<a name="instaremPurposeCodes" title="INSTAREM Purpose Codes"></a>

<b>Instarem purposeCode options:</b><br/>
<ul>
    <li><b>IR001</b> - Transfer to own account</li>
    <li><b>IR002</b> - Family Maintenance</li>
    <li><b>IR003</b> - Education-related student expenses</li>
    <li><b>IR004</b> - Medical Treatment</li>
    <li><b>IR005</b> - Hotel Accomodation</li>
    <li><b>IR006</b> - Travel</li>
    <li><b>IR007</b> - Utility Bills</li>
    <li><b>IR008</b> - Repayment of Loans</li>
    <li><b>IR009</b> - Tax Payment</li>
    <li><b>IR010</b> - Purchase of Residential Property</li>
    <li><b>IR011</b> - Payment of Property Rental</li>
    <li><b>IR012</b> - Insurance Premium</li>
    <li><b>IR013</b> - Product indemnity insurance</li>
    <li><b>IR014</b> - Insurance Claims Payment</li>
    <li><b>IR015</b> - Mutual Fund Investment</li>
    <li><b>IR016</b> - Investment in Shares</li>
    <li><b>IR017</b> - Donations</li>
    <li><b>IR01801</b> - Information Service Charges</li>
    <li><b>IR01802</b> - Advertising & Public relations-related expenses</li>
    <li><b>IR01803</b> - Royalty fees, trademark fees, patent fees, and copyright fees</li>
    <li><b>IR01804</b> - Fees for brokers, front end fee, commitment fee, guarantee fee and custodian fee</li>
    <li><b>IR01805</b> - Fees for advisors, technical assistance, and academic purpose\_code_number, including remuneration for specialists</li>
    <li><b>IR01806</b> - Representative office expenses</li>
    <li><b>IR01807</b> - Construction costs/expenses</li>
    <li><b>IR01808</b> - Transportation fees for goods</li>
    <li><b>IR01809</b> - For payment of exported goods</li>
    <li><b>IR01810</b> - Delivery fees for goods</li>
    <li><b>IR01811</b> - General Goods Trades - Offine trade</li>
</ul>


<a name="interac" title="INTERAC Payment Object"></a>
## interac 

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/interac.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>CA</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>CAD</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>

> No additional values supported, please use the common payment object.


<a name="neteller" title="NETELLER Payment Object"></a>
## neteller

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/neteller.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>All countries except: AF,AM,BT,BV,MM,CN,CC,CD,CK,CU,ER,GS,GU,GN,HM,IR,IQ,CI,KZ,KP,KG,LR,LY,MN,MP,FM,MH,PW,PK,TL,PR,SL,SO,ZW, SD,SY,TJ,TM,UG,US,VI,UZ,YE</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>EUR,USD,GBP,HKD,SGD,JPY,CAD,AUD,CHF,DKK,SEK,NOK,ILS,MYR,NZD,TRY,AED,MAD,QAR,SAR,TWD,THB,CZK,HUF,BGN,PLN,ISK,INR,KRW,ZAR,RON,HRK,JOD,OMR,RSD,TND,BHD,KWD</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your NETELLER <b>Payment (P)</b> request.

|Element                        |Type                          |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                            |---                           |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                               |**Request Type**              |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|consumerId                     |string                        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |The NETELELR Email address of the consumer.|
|emailMessage                   |string                        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#8210;           |&#8210;           |Message to use in customer email.|
|recipientDescription           |string<br>`length<=30`        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |A description to be shown on the NETELLER payment page in the logo area if there is no logo\_url parameter. If no value is submitted and there is no logo, the pay\_to\_email value is shown as the recipient of the payment. <br/><i>Only applicable for NETELLER via SkrillQuickCheckout integrations</i> |
|logoUrl                        |string                        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The URL of the logo which you would like to appear in the top right of the NETELLER page. The logo must be accessible via HTTPS or it will not be shown. The logo will be resized to fit. To avoid scaling distortion, the minimum size should be as follows:<br>If the logo width > height - at least 107px wide.<br>If logo width > height - at least 65px high.<br>Avoid large images (much greater than 256 by 256px) to minimize the page loading time. <br/><i>Only applicable for NETELLER via SkrillQuickCheckout integrations</i>|
|detail1Description             |string                        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |You can show additional details about the product in the More information section in the header of Quick Checkout.|
|detail1Text                    |string                        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The detail1Text is shown next to the detail1Description in the More Information section in the header of the payment form with the other payment details. The detail1Description combined with the detail1Text is shown in the more information field of the merchant account history CSV file.|

> NOTE: Required parameters may change depending upon which NETELLER integration is being used.  

```
"neteller": {
    "consumerId":"neteller.account@example.org",
    "consumerVerificationId":"123456",
    "recipientDescription":"logo_url_alt_text",
    "language":"EN",
    "logoUrl":"http://www.paysafe.com/icon.jpg",
    "detail1Description":"Details 1 description",
    "detail1Text":"Details 1 text"
}
```

<a name="payolution" title="Paysafe Pay Later Payment Object"></a>
## payolution

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paysafepaylater.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>DE, AT, CH, NL, UK</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>EUR, GBP, CHF, CAD</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Asyncronous</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Manual Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your Paysafe Pay Later <b>Verification (V)</b> or <b>Payment (P)</b> request.

|Element                        |Type                                     |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                            |---                                      |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                               |**Request Type**                         |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|productType                    |enum                                     |&#8210;           |&#9864;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |**Note:** You must have a separate merchant account for each product type, i.e., one for INVOICE and one for INSTALLMENTS. Possible values are:<ul><li>INVOICE &ndash; Use for regular authorization request to be followed up with a Settlement.</li><li>INSTALLMENTS &ndash; Use when consumer has opted for installment payments.</li></ul> |
|descriptor                     |string<br/>`length<300=`                 |&#8210;           |&#9862;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the merchant descriptor that will be displayed on the consumer's bank statement.|
|<paymentVehicle>               |[object](#Payment Vehicle Objects)       |&#8210;           |&#9864;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |These are consumer bank details, used for Direct Debit INSTALLMENT payments. |
|plans                          |[object](#payolution.plans)              |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#8210;           |&#8210;           |If the consumer is eligible, this object contains installments with amount and due date plus some additional parameters like interest, etc., for the Payment Authorization.<br/><i>Read Only</i>|
|planDuration                   |string                                   |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the duration, in months, of the plan selected by the consumer. |
|paymentInformation             |[object](#payolution.paymentInformation) |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#8210;           |&#8210;           |This is the information that tells the consumer where to send the payment, when they have opted for installment payments.<br/><i>Read Only</i>|
|analysis                       |object                                   |&#8210;           |&#9862;          |&#8210;                  |&#8210;                |&#9862;           |&#9862;           |&#8210;           |&#8210;           |This object is a list of key,value pairs containing additional information for analysis and to improve Payolution's risk assessment processes. For more info see [here](https://developer.paysafe.com/en/rest-api/alternate-payments/payment-type-considerations/payolution/#analysis) |

```
"payolution": {
    "productType": "INSTALLMENTS",
    "descriptor": "Order with ID 4ab2",
    "sepa": {
        "bankName": "ING",
        "country": "NL",
        "accountHolderName": "John Doe",
        "bic": "ABNANL2APIP",
        "iban": "DE89370400440532013000"
    },
    "analysis": [{
        "key": "PAYOLUTION_CUSTOMER_GROUP",
        "value": "TOP"
    }, {
        "key": "PAYOLUTION_MODULE_NAME",
        "value": "PaymentModuleName"
    }, {
        "key": "PAYOLUTION_INVOICE_ID",
        "value": "23498739478"
    }, {
        "key": "PAYOLUTION_ORDER_ID",
        "value": "23498739478"
    }]
}
```


<a name="payolution.plans" title="payolution.plans Object"></a>


This is a Paysafe Pay Later (Payolution) specific read only response object that contains details about available INSTALLMENT plans.

|Element                        |Type                                 |Description|
|---                            |---                                  |---|
|                               |**supported resources**              |   |
|paymentDetails                 |[array of [object](#payolution.paymentDetails)] |This is an array of payment details objects. <br/><i>Read Only</i>|
|tacUrl                         |string                               |This is a URL pointing to the Terms and Conditions for the payment plan.<br/><i>Read Only</i>|
|dataPrivacyConsentUrl          |string                               |This is a URL pointing to the data privacy declaration for the payment plan.<br/><i>Read Only</i>|

> &#8224; - These fields are only returned for Payolution INSTALLMENT responses.

```
{
    "paymentDetails": [{
        "originalAmount": 1000,
        "totalAmount": 1026,
        "minimumInstallmentFee": 0,
        "duration": 3,
        "interestRate": 14.95,
        "effectiveInterestRate": 16.02,
        "standardCreditInformationUrl": "https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=b08a1d6a-5249-4271-944f-9695357b9fd6;duration=3",
        "installments": [{
                "amount": 342,
                "due": "2018-02-05"
            },
            {
                "amount": 342,
                "due": "2018-03-05"
            },
            {
                "amount": 342,
                "due": "2018-04-05"
            }
        ]
    }],
    "tacUrl": "https://test-payment.payolution.com/payolution-payment/infoport/termsandconditions?channelId=paysafe-installment",
    "dataPrivacyConsentUrl": "https://test-payment.payolution.com/payolution-payment/infoport/dataprivacydeclaration?channelId=paysafe-installment"
}
```

<a name="payolution.paymentDetails" title="payolution.paymentDetails Object"></a>


This is a Paysafe Pay Later (Payolution) specific read only response object that contains payment details for an INSTALLMENT plan.

|Element                        |Type                                    |Description|
|---                            |---                                     |---|
|                               |**supported resources**                 |   |
|installments                   |[object](#payolution.installments)      |These are details about the payolution installment plan for the consumer. <br/><i>Read Only</i>|
|originalAmount                 |number                                  |This is the original amount of the Verification, in minor units. <br/><i>Read Only</i>|
|totalAmount                    |number                                  |This is the total amount to be paid by the consumer (i.e., the sum of all installments).<br/><i>Read Only</i>|
|minimumInstallmentFee          |number                                  |This is the minimum installment fee.<br/><i>Read Only</i>|
|duration                       |number                                  |This is the duration, in months, of the payment plan.<br/><i>Read Only</i>|
|interestRate                   |number                                  |This is interest rate of the payment plan.<br/><i>Read Only</i>|
|effectiveInterestRate          |number                                  |This is effective interest rate of the payment plan.<br/><i>Read Only</i>|
|standardCreditInformationUrl   |string                                  |This is a URL pointing to a PDF file containing the full credit information in the standard European consumer credit information form.<br/><i>Read Only</i>|

```
"paymentDetails": [{
    "installments": [{
            "amount": 16820,
            "due": "2013-07-16"
        },
        {
            "amount": 16820,
            "due": "2013-08-05"
        },
        {
            "amount": 16820,
            "due": "2013-09-05"
        }
    ],
    "originalAmount": 49999,
    "totalAmount": 50460,
    "minimumInstallmentFee": 0,
    "duration": 3,
    "interestRate": 14.95,
    "effectiveInterestRate": 15.60,
    "standardCreditInformationUrl": "https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=Tx-xzprcfl958m&amp;duration=3"
}]
```

<a name="payolution.installments" title="payolution.installments Object"></a>


This is a Paysafe Pay Later (Payolution) specific read only response object that contains INSTALLMENT plan options for a request.

|Element                        |Type                   |Description|
|---                            |---                    |---|
|                               |**supported resources**|   |
|amount                         |number                 |This is the amount of the installment payment in minor units.<br/><i>Read Only</i>|
|due                            |string                 |This is the due date of the installment payment.<br/><i>Read Only</i>|

```
            {
                "installments": [{
                        "amount": 16820,
                        "due": "2013-07-16"
                    },
                    {
                        "amount": 16820,
                        "due": "2013-08-05"
                    },
                    {
                        "amount": 16820,
                        "due": "2013-09-05"
                    }
                ]
            }
```

<a name="payolution.paymentInformation" title="payolution.paymentInformation Object"></a>


* This is a Paysafe Pay Later (Payolution) specific read only response object

|Element                        |Type                   |Description|
|---                            |---                    |---|
|                               |**supported resources**|   |
|paymentReference               |string                 |The string to use as a reason for the payment.<br/><i>Read Only</i>|
|iban                           |string                 |The IBAN to send the payment to.<br/><i>Read Only</i>|
|bic                            |string                 |The BIC of the bank to send the payment to.<br/><i>Read Only</i>|
|bankName                       |string                 |This is the name of the bank to send the payment to.<br/><i>Read Only</i>|
|accountHolderName              |string                 |This is the name of the beneficiary.<br/><i>Read Only</i>|

```
{
    "paymentReference": "YTTR-WMQX-KLGW",
    "iban": "AT611904300234573201456",
    "bic": "BFRILI22XXX",
    "bankName": "Musterbank",
    "accountHolderName": "Test Merchant"
}
```

<a name="paypal" title="PayPal Payment Object"></a>
## paypal 

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paypal.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment, Settlement, Refund, Void Authorization</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>USA, EU, UK, CAN</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>USD, CAD, EUR, GBP</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>PayPal Checkout, Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic or Manual Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your PayPal <b>Payment (P)</b> request.

|Element                        |Type                                     |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                            |---                                      |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                               |**Request Type**                         |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|consumerId                     |string<br/>`length<=255`                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the email of the customer at login.|
|consumerMessage                |string<br/>`length<=165`                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the message that is displayed to the consumer.|
|recipientDescription           |string<br/>`length<=127`                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the label that overrides the business name.|
|language                       |string<br/>`length=2`                    |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The locale of pages that the PayPal payment experience displays.|
|shippingPreference             |enum                                     |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the shipping preference. <br/>Options:<br/><ul><li>GET_FROM_FILE</li><li>NO_SHIPPING</li><li>SET_PROVIDED_ADDRESS</li>|
|orderDescription               |string                                   |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the order description that will be displayed on the PayPal page.|

```
"paypal": {
    "consumerId": "customer.paypal@email.com",
    "consumerMessage": "consumer message",
    "recipientDescription": "Our business ltd.",
    "language": "US",
    "shippingPreference": "GET_FROM_FILE",
    "orderDescription": "The best order"
}
```


<a name="paysafecard" title="Paysafecard Payment Object"></a>
## paysafecard

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paysafecard.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment, Settlement</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>supported in 61 countries</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>Contact Payafe Support</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Manual Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your Paysafecard <b>Payment (P)</b> request.

|Element                        |Type                   |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                            |---                    |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                               |**Request Type**       |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|consumerId                     |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |The unique identifier of the consumer at the merchant. For security purposes, if any personal data is used (e.g., consumer's user name, email address, etc.), it has to be encrypted or hashed.|
|ageRestriction                 |number                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |Minimum age restriction for the transaction.|
|kycLevelRestriction            |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The KYC level that will be required for the transaction. Options:<ul><li>FULL</li><li>SIMPLE</li></ul>|
|countryRestriction             |string<br>`length=2`   |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The ISO 3166-1 alpha-2 code of the country to which the transaction will be restricted.|

```
"paysafecard": {
    "consumerId": "merchantclientid",
    "minAgeRestriction": 18,
    "kycLevelRestriction": "SIMPLE",
    "countryRestriction": "DE"
}
```

<a name="paysafecash" title="Paysafecash Payment Object"></a>
## paysafecash

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paysafecash.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment, Settlement</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>Austria, Spain, Slovenia, Portugal, Hungary, Bulgaria, Finland, Croatia, Italy, Latvia, Romania, Switzerland, Chezh Republic, Denmark, France, UK, Ireland, Luxemburg, Netherlands, Poland, Slovakia, USA, Canada, Australia</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>Contact Payafe Support</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Manual Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your Paysafecash <b>Payment (P)</b> request.

|Element                        |Type                   |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                            |---                    |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                               |**Request Type**       |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|consumerId                     |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |The unique identifier of the consumer at the merchant. For security purposes, if any personal data is used (e.g., consumer's user name, email address, etc.), it has to be encrypted or hashed.|
|ageRestriction                 |number                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |Minimum age restriction for the transaction.|
|kycLevelRestriction            |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The KYC level that will be required for the transaction. Options:<ul><li>FULL</li><li>SIMPLE</li></ul>|
|countryRestriction             |string<br>`length=2`   |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The ISO 3166-1 alpha-2 code of the country to which the transaction will be restricted.|

```
"paysafecash": {
    "consumerId": "merchantclientid",
    "minAgeRestriction": 18,
    "kycLevelRestriction": "SIMPLE",
    "countryRestriction": "DE"
}
```

<a name="rapidtransfer" title="Rapid Transfer Payment Object"></a>
## rapidtransfer

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/rapidtransfer.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>Austria, France, Germany, Hungary, Italy, Spain, UK, Poland, Portugal</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>EUR, GBP</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your Rapid Transfer <b>Payment (P)</b> request.  If the iban and bic are not provided, then the consumer will be shown a bank picker where they will be able to select their bank by name.  If relevant
details are provided, then the consumer will be automatically directed to login to their bank.

|Element                        |Type                   |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                            |---                    |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                               |**Request Type**       |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|descriptor                     |string<br/>`length=X`  |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |This is the merchant descriptor that will be displayed on the consumer's bank statement.|
|sepa                           |[object](#sepa)        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The consumer's SEPA bank account details \(if applicable\). |
|sepa.country                   |enum                   |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The ISO 3166-1 alpha-2 code for the consumer's bank \(e.g., Germany = DE, JP=Japan, CA=Canada\).|
|sepa.iban                      |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The International Bank Account Number (IBAN) of the account.|
|sepa.bic                       |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The Bank Identifier Code (BIC) of the account.|

```
"rapidTransfer": {
    "descriptor": "custom descriptor"
}
```

<a name="skrill" title="Skrill Payment Object"></a>
## skrill

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/skrill.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>All countries except: AF,CU,ER,IR,IQ,JP,KG,LY,KP,SD,SS,SY</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>EUR,USD,GBP,HKD,SGD,JPY,CAD,AUD,CHF,DKK,SEK,NOK,ILS,MYR,NZD,TRY,AED,MAD,QAR,SAR,TWD,THB,CZK,HUF,BGN,PLN,ISK,INR,KRW,ZAR,RON,HRK,JOD,OMR,RSD,TND,BHD,KWD</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your Skrill <b>Payment (P)</b> or <b>Standalone Credit (SC)</b> request.

|Element                |Type                   |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                    |---                    |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                       |**Request Type**       |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|consumerId             |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#9864;           |&#8210;           |Email address of the customer who is making or receiving the payment. If provided, this field is hidden on the payment form. If left empty, the customer has to enter their email address.|
|emailSubject           |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#9864;           |&#8210;           |Subject line to use in customer email.|
|emailMessage           |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#8210;           |&#8210;           |&#9864;           |&#8210;           |Message to use in customer email.|
|recipientDescription   |string<br>`length<=30` |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |A description to be shown on the Skrill payment page in the logo area if there is no *logo\_url* parameter. If no value is submitted and there is no logo, the *pay\_to\_email* value is shown as the recipient of the payment.|
|language               |string<br>`length=2`   |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The 2-character preferred language code for the consumer (e.g., EN, FR).|
|logoUrl                |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The URL of the logo which you would like to appear in the top right of the Skrill page. The logo must be accessible via HTTPS or it will not be shown. The logo will be resized to fit. To avoid scaling distortion, the minimum size should be as follows:<br>If the logo width > height - at least 107px wide.<br>If logo width > height - at least 65px high<br>Avoid large images (much greater than 256 by 256px) to minimize the page loading time.|
|detail1Description     |string                 |&#8210;           |&#8210;          |&#9862;                  |&#8210;                |&#8210;           |&#8210;           |&#8210;           |&#8210;           |You can show additional details about the product in the More information section in the header of Quick Checkout.|
|detail1Text            |string                 |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The detail1Text is shown next to the detail1Dscription in the More Information section in the header of the payment form with the other payment details. The detail1Description combined with the detail1Text is shown in the more information field of the merchant account history CSV file.|


> Payment

```
"skrill": {
    "consumerId": "john.doe@email.com",
    "recipientDescription":"logo_url_alt_text",
    "language":"EN",
    "logoUrl":"http://www.paysafe.com/icon.jpg",
    "detail1Description":"Details 1 description",
    "detail1Text":"Details 1 text"
}
```

> Standalone Credit

```
"skrill": {
    "consumerId": "john.doe@email.com",
    "emailSubject": "Email Subject",
    "emailMessage": "Note for email here."
}
```

<a name="sofort" title="Sofort Payment Object"></a>
## sofort

<table>
<tr>
    <td><b>Brand Logo:</b></td>
    <td><img src="https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/klarna.png"/></td>
</tr>
<tr>
    <td><b>Supported Functions:</b></td>
    <td>Payment, Refund, Return, Return Reversal</td>
</tr>
<tr>
    <td><b>Countries:</b></td>
    <td>DE, AT, CH, NL, UK, BE, FR, IT, PL, ES, HU, CZ, SK</td>
</tr>
<tr>
    <td><b>Currencies:</b></td>
    <td>EUR, GBP, CHF</td>
</tr>
<tr>
    <td><b>Integration Type:</b></td>
    <td>Consumer Redirect</td>
</tr>
<tr>
    <td><b>Settlement Types:</b></td>
    <td>Automatic Settlement</td>
</tr>
</table>

The following custom attributes can be passed in your Klarna <b>Payment (P)</b> request.

|Element                |Type                   |                  |                 |                         |                       |                  |                  |                  |                  |Description|
|---                    |---                    |:---:             |:---:            |:---:                    |:---:                  |:---:             |:---:             |:---:             |:---:             |---|
|                       |**Request Type**       |_**RG**_          |_**V**_          |_**PH (P)**_             |_**PH (SC)**_          |_**P**_           |_**S**_           |_**SC**_          |_**RF**_          |   |
|descriptor             |string<br/>`length<=43`|&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9864;           |&#8210;           |&#8210;           |&#8210;           |This is the merchant descriptor that will be displayed on the consumer's bank statement.|
|sepa                   |[object](#sepa)        |&#8210;           |&#8210;          |&#8210;                  |&#8210;                |&#9862;           |&#8210;           |&#8210;           |&#8210;           |The customer's SEPA bank account details.|


```
"sofort": {
    "descriptor": "custom descriptor",
    "sepa": {
    }
}
```


# Error Summary

To ease integration and support for developers
integrating to our APIs, the error messages that are returned should be verbose enough to correct the problem.

> See [error Object](#error)

The error structure contains a code as well as a human readable message.
Additionally, the application error code will be returned in the header as *x-application-error-code*
so it can be easily used by an application without parsing the body.
<br/>

**Error message example with details**

```
Status-Code: 402

x-application-status-code: ALTERNATIVE-PAYMENTS-GATEWAY-6
x-application-error-code: ALTERNATIVE-PAYMENTS-GATEWAY-6
x-application-error-message: Bad Request
x-application-error-details: Illegal unquoted character ((CTRL-CHAR, code 10)): has to be escaped using backslash to be included in string value at  [line: 2, column: 61]

{
    "error": {
        "code": "5023",
        "message": "Bad Request",
        "details": {
            "Illegal unquoted character ((CTRL-CHAR, code 10)): has to be escaped using backslash to be included in string value at  [line: 2, column: 61]"
        }
    }
}
```

**Error message example with field errors**

```
Status-Code: 400

x-application-status-code: 5068
x-application-error-code: 5068
x-application-error-message: Field Error(s)
x-application-error-details: Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.

{
    "error": {
        "code": "5068",
        "message": "Field Error(s)",
        "details": [
            "Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected."
        ],
        "fieldErrors": [{
            "field": "recipientEmail",
            "error": "john@hi@you.c.c.c.c is not a valid e-mail address."
        }, {
            "field": "transaction.amount",
            "error": "A transaction amount is required."
        }, {
            "field": "transaction.currency",
            "error": "Currency with value [USD] exceeds the maximum size of [3]."
        }]
    }
}
```


These are the error codes common to all subsystems.

|HTTP Status   |Error Code     |Message                                 |Details|
|---           |---            |---                                     |---|
|400           |5001           |Invalid currency                        |The submitted currency code is invalid or your account does not support this currency.|
|              |5005           |Unsupported operation                   |You submitted an an invalid or unsupported operation type with your request.|
|              |5010           |Invalid country                         |The submitted country code is invalid.|
|              |5016           |Account not found                       |The account you provided cannot be found.|
|              |5017           |Account disabled                        |The account you provided is disabled.|
|              |5023           |Bad request                             |The request is not parseable.|
|              |5042           |Invalid merchant reference              |This error usually indicates that a transaction was attempted with the merchant reference field missing. This value is mandatory and must be included with your request.|
|              |5068           |Field error(s)                          |Either you submitted a request that is missing a mandatory  field or the value of a field does not match the format expected.|
|              |5082           |Mode not permitted                      |The request was sent in a mode that is not permitted. For example, a Live refund request was made on a Test authorization request.|
|401           |5275           |Authentication credentials expired      |The authentication credentials provided with the request have expired.|
|              |5276           |Authentication credentials disabled     |The authentication credentials provided with the request provided have been disabled.|
|              |5277           |Authentication credentials locked       |The authentication credentials provided with the request have been locked due to multiple authentication failures.|
|              |5278           |Cannot authenticate                     |The authentication credentials provided with the request were not accepted for an unknown reason.|
|              |5279           |Authentication credentials are invalid  |The authentication credentials are invalid.|
|              |5280           |Authentication credentials not provided |The required authentication credentials were not provided.|
|403           |5270           |Unauthorized access                     |The credentials provided with the request do not have permission to access the requested data.|
|404           |5269           |Entity not found                        |The ID\(s\) specified in the URL do not correspond to the values in the system.|
|              |5273           |URI not found                           |Your client reached our application but we were unable to service your request due to an invalid URL.|
|405           |5281           |Method not supported                    |The request uses an action (e.g., GET, POST, or PUT) that is not supported by the resource.|
|406           |5271           |Unsupported 'Accept' header             |You requested a response in the 'Accept' header that is in an unsupported format.|
|409           |5031           |Duplicate merchant reference            |The provided reference has already been used for another request.|
|415           |5272           |Unsupported 'Content-Type'              |The 'Content-Type' you specified in request header was submitted in an unsupported format.|
|429           |1200           |API call rate exceeded                  |The API call has been denied as it has exceeded the permissible call rate limit.|
|500           |1000           |Internal error                          |An internal error occurred.|
|502           |1001           |External gateway error                  |An external error occurred.|

These errors are specific to the Alternate Payments API.

|HTTP Status   |Error Code                    |Message                                 |Details|
|---           |---                           |---                                     |---|
|402           |ALTERNATE-PAYMENTS-GATEWAY-1  |Transaction cancelled at the gateway    |The transaction was cancelled at the gateway.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-4  |Transaction declined by the gateway     |The transaction declined by the gateway. |
|402           |ALTERNATE-PAYMENTS-GATEWAY-5  |Incomplete transaction                  |The requested operation can only be executed on a completed transaction.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-6  |Over refund                             |The total refund amount cannot exceed the original payment amount.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-7  |Payment expired                         |The payment has expired.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-8  |Over settlement                         |The total Settlement amount cannot exceed the authorized (payment) amount.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-9  |Risk gateway error                      |A risk issue was reported by the gateway.|
|502           |ALTERNATE-PAYMENTS-GATEWAY-10 |Payment type temporarily unavailable    |The gateway is temporarily unavailable due to system maintenance activities.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-11 |Over voidauth                           |The void authorization cannot exceed the amount remaining to settle for the corresponding payment.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-12 |Payment already settled                 |The payment is already partially/fully settled.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-13 |Transaction not refundable yet          |The transaction is not refundable yet.|
|402           |ALTERNATE-PAYMENTS-GATEWAY-14 |Partial settlements not possible        |Partial Settlements are not possible with the selected payment method.|

# Legal and Community
<ul>
<li><a href="https://www.paysafe.com/paysafegroup/privacy-policy/" target="_blank">Privacy Policy</a></li>
<li><a href="https://developer.paysafe.com/en/resources-and-support/terms-of-use/" target="_blank">Terms of Use</a></li>
<li><a href="https://www.paysafe.com/paysafegroup/regulatory-disclosures/" target="_blank">Regulatory Disclosures</a></li>
<li><a href="http://community.paysafe.com/spaces/11/index.html" target="_blank">FAQs</a></li>
<li><a href="http://community.paysafe.com/index.html" target="_blank">Community</a></li>
<li><a href="http://community.paysafe.com/spaces/10/index.html" target="_blank">Paysafe Blog</a></li>
</ul>

# Verify That the Service Is Accessible [GET /monitor]

This call returns a status of READY if the API is available.

+ Response 200 (application/json)

  + Body

            {
                "status" : "READY"
            }

# Payments [/payments]
<a name="payments" title="Payments"></a>

The payments resource represents a Payment Authorization.

A Payment and Settlement work in conjunction and a complete transaction will always have both resources associated to it (Payment + Settlement).

When requesting a payment, by default it will include automatic Settlement (*settleWithAuth* = *true*). This will trigger creation of a corresponding Settlement record.  The
Settlement record represents the actual capture of funds to your merchant account. For cases  when *settleWithAuth* is *true*, the corresponding Settlement will have the same
resource identifier (ID) as the payment because it was created from the same request.

Alternatively, you can choose manual Settlement (*settleWithAuth* = *false*). In this case, the Payment only represents an Authorization for the Payment and you must complete
a subsequent Settlement request when you wish to capture the payment.  The ability to perform manual Settlement will depend on the payment option you are attempting.
[Click here](https://developer.paysafe.com/en/rest-api/alternate-payments/getting-started/overview/) to see which payment types support manual settlement.

> **Note:** Each payment type and currency is associated with a distinct merchant account ID.  You will need to know which account ID is associated to your payment type and currency
> in order to complete your request. Please contact [Paysafe Merchant Support](https://developer.paysafe.com/en/resources-and-support/contact-us/) to enable additional payment types and or currencies.


## Create an Authorized Payment [POST /accounts/{accountId}/payments]
<a name="createauthorization" title="Create an Authorized Payment"></a>

Submit a payment request using local payment methods that your customers are familiar with.
Once you have submited your request, if you are returned a *redirect_payment* HATEOAS link, then you must redirect
your consumer to the link to complete the payment.

In addition to specifying *paymentType* as part of your API request, if the desired payment method also requires additional attributes,
these should be passed as a nested object in the root of your payment request.
<br/>
For example, a SOFORT payment can support the following attributes to be included in your request:

```
{
    "paymentType": "SOFORT",
    "sofort": {
       "sepa": {
           "bankName": "ing",
           "country": "NL"
       }
    }
    ... other payment attributes here ...
```

See [Payment Objects](#paymentObjects) for payment type specific details, or select a payment type below.


| | | | |
|---|---|---|---|
|[![Paysafecard](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paysafecard.png)](#paysafecard)|[![Skrill](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/skrill.png)](#skrill)|[![Neteller](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/neteller.png)](#neteller)|[![Payolution](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/rapidtransfer.png)](#rapidtransfer)|
|[![Interac](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/interac.png)](#interac)|[![Sofort](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/Klarna_text.png)](#sofort)|[![Giropay](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/giropay.png)](#giropay)|[![Boku](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/boku.png)](#boku)|
|[![RapidTransfer](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paysafepaylater.png)](#payolution)|[![Paysafecash](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paysafecash.png)](#paysafecash)|[![PayPal](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/paypal.png)](#paypal)||


Click on **Create an Authorized Payment** above to see two examples of a Payment Authorization request:
* A standard Payment Authorization using the RapidTransfer payment method, with automatic settlement.
* A Payment Authorization using the payolution payment method, offering payment by installments. You must first process a [Verification request](#createverification) for the consumer before they can pay by installments.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.

+ Attributes
    + Include payment
    + Include paymentType
    + Include boku
    + Include giropay
    + Include neteller
    + Include payolution
    + Include paypal
    + Include paysafecard
    + Include paysafecash
    + Include rapidTransfer
    + Include skrill
    + Include sofort
    + Include links

+ Request Create Rapid Transfer Payment (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "amount": 150,
                "paymentType": "RAPIDTRANSFER",
                "currencyCode": "GBP",
                "merchantRefNum": "MR1000001",
                "settleWithAuth": "true",
                "profile": {
                  "email": "john.doe@email.com",
                  "firstName": "John",
                  "lastName": "Doe"
                },
                "billingDetails": {
                    "city": "Berlin",
                    "country": "DE",
                    "state": "Berlin",
                    "street1": "Street Address1",
                    "street2": "Street Address2",
                    "zip": "10179"
                },
                "returnLinks": [
                  {
                      "rel": "default",
                      "href": "http://www.paysafe.com"
                }]
            }

+ Response 201 (application/json)

    + Body

            {
                "id": "c9659fcd-0c68-4cba-b7c9-6b6e353cfe00",
                "gatewayReconciliationId": "QAAAAAAPU4",
                "merchantRefNum": "MR1000001",
                "amount": 150,
                "currencyCode": "GBP",
                "paymentType": "RAPIDTRANSFER",
                "settleWithAuth": true,
                "availableToSettle": 0,
                "availableToRefund": 0,
                "profile": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "john.doe@email.com"
                },
                "billingDetails": {
                    "street1": "Street Address1",
                    "street2": "Street Address2",
                    "zip": "10179",
                    "city": "Berlin",
                    "country": "DE",
                    "state": "Berlin"
                },
                "rapidTransfer": {
                    "descriptor": "QAAAAAAPU4"
                },
                "returnLinks": [
                    {
                        "rel": "default",
                        "href": "http://www.paysafe.com"
                    }
                ],
                "txnTime": "2018-03-06T17:50:44Z",
                "status": "INITIATED",
                "gatewayResponse": {
                    "bankTimestamp": "2018-03-06 18:50:49",
                    "returnCode": "0",
                    "requestDateTime": "2018-03-06T12:50:47.935-05:00",
                    "durationMillis": "1363",
                    "id": "17eba3bc-b1f3-43e0-8067-d53d4f3e53fa",
                    "processor": "RAPIDTRANSFER"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1002550404/payments/c9659fcd-0c68-4cba-b7c9-6b6e353cfe00"
                    },
                    {
                        "rel": "redirect_payment",
                        "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1002550404/payments/c9659fcd-0c68-4cba-b7c9-6b6e353cfe00/redirect?token=eyJhbGciOiJIUzI1NiJ9.eyJhY2QiOiIxMDAyNTUwNDA0IiwicHlkIjoiYzk2NTlmY2QtMGM2OC00Y2JhLWI3YzktNmI2ZTM1M2NmZTAwIiwiZXhwIjoxNTIwMzYwNDQ0fQ.OCkfKTRq8Ca-VfNoXGWWv2msxOkYEksg8cDHNU06sjA"
                    }
                ]
            }

+ Request Create payolution Payment with Installments (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "amount": 1000,
                "merchantRefNum": "payolution_Installment345",
                "paymentType": "PAYOLUTION",
                "verificationId": "2f6f0150-2f08-43be-ad42-aa89fafde792",
                "payolution": {
                    "productType": "INSTALLMENTS",
                    "planDuration": "3",
                    "descriptor": "Descriptor",
                    "analysis": [{
                        "key": "PAYOLUTION_CUSTOMER_GROUP",
                        "value": "TOP"
                    }, {
                        "key": "PAYOLUTION_MODULE_NAME",
                        "value": "PaymentModuleName"
                    }, {
                        "key": "PAYOLUTION_INVOICE_ID",
                        "value": "23498739478"
                    }, {
                        "key": "PAYOLUTION_ORDER_ID",
                        "value": "23498739478"
                    }]
                },

                "settleWithAuth": false,
                "profile": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@paysafe.com",
                    "dateOfBirth": {
                        "day": "01",
                        "month": "01",
                        "year": "1970"
                    }
                },
                "billingDetails": {
                    "street1": "Teststreet 19",
                    "zip": "3512 JS",
                    "state": "UT",
                    "city": "Utrecht",
                    "country": "NL"
                }
            }

+ Response 201 (application/json)

    + Body

            {
                "id": "5063daee-0e9e-4d0d-838f-b7bac2b04b8d",
                "merchantRefNum": "payolution_Installment345",
                "amount": 1000,
                "currencyCode": "EUR",
                "paymentType": "PAYOLUTION",
                "settleWithAuth": false,
                "verificationId": "2f6f0150-2f08-43be-ad42-aa89fafde792",
                "availableToSettle": 1000,
                "availableToRefund": 0,
                "profile": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@paysafe.com",
                    "dateOfBirth": {
                        "day": 1,
                        "month": 1,
                        "year": 1970
                    }
                },
                "billingDetails": {
                    "street1": "Teststreet 19",
                    "zip": "3512 JS",
                    "city": "Utrecht",
                    "country": "NL",
                    "state": "UT"
                },
                "payolution": {
                    "paymentInformation": {
                        "paymentReference": "3990bdf5-fd9e-4185-b204-026368198f67",
                        "iban": "AT611904300234573201456",
                        "bic": "BFRILI22XXX",
                        "bankName": "Musterbank",
                        "accountHolderName": "Test Merchant"
                    },
                    "descriptor": "Descriptor",
                    "analysis": [{
                            "key": "PAYOLUTION_CUSTOMER_GROUP",
                            "value": "TOP"
                        },
                        {
                            "key": "PAYOLUTION_MODULE_NAME",
                            "value": "PaymentModuleName"
                        },
                        {
                            "key": "PAYOLUTION_INVOICE_ID",
                            "value": "23498739478"
                        },
                        {
                            "key": "PAYOLUTION_ORDER_ID",
                            "value": "23498739478"
                        },
                        {
                            "key": "PAYOLUTION_PRE_CHECK_ID",
                            "value": "7373c12f-ea2e-4e65-b7f7-4ee8fa8c7f47"
                        }
                    ],
                    "paymentDetails": {
                        "originalAmount": 10,
                        "totalAmount": 10.26,
                        "minimumInstallmentFee": 0,
                        "duration": 3,
                        "interestRate": 14.95,
                        "effectiveInterestRate": 16.02,
                        "installments": [{
                                "amount": 3.42,
                                "due": "2018-02-05"
                            },
                            {
                                "amount": 3.42,
                                "due": "2018-03-05"
                            },
                            {
                                "amount": 3.42,
                                "due": "2018-04-05"
                            }
                        ]
                    }
                },
                "txnTime": "2018-01-24T19:21:04Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "code": "0.0.0",
                    "description": "The request was processed successfully.",
                    "id": "05f1c3e1-73af-43f6-a672-758bed33ce5e",
                    "processor": "PAYOLUTION",
                    "paymentType": "PA"
                },
                "links": [{
                        "rel": "self",
                        "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1001186650/payments/5063daee-0e9e-4d0d-838f-b7bac2b04b8d"
                    },
                    {
                        "rel": "verification",
                        "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1001186650/verifications/2f6f0150-2f08-43be-ad42-aa89fafde792"
                    }
                ]
            }

## Get Payment by ID [GET /accounts/{accountId}/payments/{paymentId}]
<a name="getpayment" title="Look Up a Payment"></a>

Click on **Get Payment by ID** above to see how to look up a [Payment](#payment) using the payment ID, which is the *id* returned in the response to the Payment request.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `25f6dadf-176a-415f-95c9-6ff39ff697ba`) - This is your unique payment identifier.

+ Request Get Payment (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "c1e0236e-ba23-4f12-9eab-bfc7ed07d303",
                "gatewayReconciliationId": "QAAAAAAAAI",
                "merchantRefNum": "P123ASA4",
                "amount": 100,
                "currencyCode": "GBP",
                "paymentType": "RAPIDTRANSFER",
                "settleWithAuth": true,
                "availableToSettle": 0,
                "profile": {
                    "firstName": "Stan",
                    "lastName": "Smith",
                    "email": "stan.smith@fox.com"
                },
                "billingDetails": {
                    "street1": "Street line 1",
                    "street2": "Street line 2",
                    "zip": "T3H3L3",
                    "city": "Calgary",
                    "country": "CA",
                    "state": "AB"
                },
                "rapidTransfer": {
                    "descriptor": "QAAAAAAAAI custom descriptor"
                },
                "returnLinks": [
                    {
                        "rel": "default",
                        "href": "https://mysite.com/return"
                    }
                ],
                "txnTime": "2018-02-21T11:37:12Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "processor": "RAPIDTRANSFER"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1002550404/payments/c1e0236e-ba23-4f12-9eab-bfc7ed07d303"
                    },
                    {
                        "rel": "settlements",
                        "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1002550404/payments/c1e0236e-ba23-4f12-9eab-bfc7ed07d303/settlements"
                    }
                ]
            }

## List Payments by Merchant Reference Number [GET /accounts/{accountId}/payments/?merchantRefNum={merchantRefNum}]
<a name="listpayment" title="List Payments by Merchant Reference Number"></a>


Click on **List Payments by Merchant Reference Number** above to see how to look up Payments using the merchant reference number used in the original request. This returns a collection of payment details, as *merchantRefNum* could be used for multiple requests when *dupCheck*
is disabled.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + merchantRefNum (string, required, `P1234`) - This is your unique payment identifier.

+ Request List Payments (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "numberOfRecords": 1,
                    "limit": 10,
                    "page": 1
                },
                "payments": [
                    {
                        "id": "c1e0236e-ba23-4f12-9eab-bfc7ed07d303",
                        "gatewayReconciliationId": "QAAAAAAAAI",
                        "merchantRefNum": "P123ASA4",
                        "amount": 100,
                        "currencyCode": "GBP",
                        "paymentType": "RAPIDTRANSFER",
                        "settleWithAuth": true,
                        "availableToSettle": 0,
                        "profile": {
                            "firstName": "Stan",
                            "lastName": "Smith",
                            "email": "stan.smith@fox.com"
                        },
                        "billingDetails": {
                            "street1": "Street line 1",
                            "street2": "Street line 2",
                            "zip": "T3H3L3",
                            "city": "Calgary",
                            "country": "CA",
                            "state": "AB"
                        },
                        "rapidTransfer": {
                            "descriptor": "QAAAAAAAAI custom descriptor"
                        },
                        "returnLinks": [
                            {
                                "rel": "default",
                                "href": "https://mysite.com/return"
                            }
                        ],
                        "txnTime": "2018-02-21T11:37:12Z",
                        "status": "COMPLETED",
                        "gatewayResponse": {
                            "processor": "RAPIDTRANSFER"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1002550404/payments/c1e0236e-ba23-4f12-9eab-bfc7ed07d303"
                            },
                            {
                                "rel": "settlements",
                                "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1002550404/payments/c1e0236e-ba23-4f12-9eab-bfc7ed07d303/settlements"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.paysafe.com/alternatepayments/v1/accounts/1002550404/payments?merchantRefNum=P123ASA4&limit=10&offset=0&startDate=2018-02-04T18:06:45Z&endDate=2018-03-06T18:06:46Z"
                    }
                ]
            }


# Verifications [/verifications]
<a name="verifications" title="Verifications"></a>

A Verification request allows you to send a query to do a preliminary check to verify the consumer's request (e.g., verify that the profile and payment method information are valid). When you get a successful response, you can then continue and [process a Payment Authorization](#createauthorization).

**Note:** Verification requests are currently supported for the PAYOLUTION *paymentType* only. It is required if your *productType* for your Authorized Payment is *INSTALLMENTS*. However, payolution recommends that you also process a Verification request when your *productType* is *INVOICE*.

When payolution responds to the Verification request, they will indicate 1) whether the consumer information is valid; and 2) whether the consumer is eligible for credit.
In the case where the *productType* in the Verification response is *INSTALLMENTS*, payolution will also return the available payment plans with all the payment details, which should be presented to the consumer so they can select a payment plan duration. The selected duration is then passed with the *planDuration* parameter in the [Authorized Payment request](#createauthorization).

See the [payolution payment object](#payolution) for more information.


## Process a Verification Request [POST /accounts/{accountId}/verifications]
<a name="createverification" title="Process a Verification Request"></a>

Click on **Process a Verification Request** above to see how to process a Verification request. **Note:** You can currently process this request type only when the *paymentType* is set to PAYOLUTION.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.

+ Attributes
    + Include verification
    + Include paymentTypeVerification
    + Include payolution
    + Include links

+ Request Process Verification Request (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "amount": 1000,
                "merchantRefNum": "payolution_verification_{{$timestamp}}",
                "paymentType": "PAYOLUTION",
                "profile": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@paysafe.com",
                    "dateOfBirth": {
                        "day": "01",
                        "month": "01",
                        "year": "1970"
                    }
                },
                "payolution": {
                    "descriptor": "Descriptor",
                    "productType": "INSTALLMENTS",
                    "analysis": [{
                        "key": "PAYOLUTION_CUSTOMER_GROUP",
                        "value": "TOP"
                    }, {
                        "key": "PAYOLUTION_MODULE_NAME",
                        "value": "PaymentModuleName"
                    }, {
                        "key": "PAYOLUTION_INVOICE_ID",
                        "value": "23498739478"
                    }, {
                        "key": "PAYOLUTION_ORDER_ID",
                        "value": "23498739478"
                    }]
                },
                "billingDetails": {
                    "street1": "Teststreet 19",
                    "zip": "3512 JS",
                    "state": "UT",
                    "city": "Utrecht",
                    "country": "NL"
                }
            }

+ Response 201 (application/json)

    + Body

            {
                "id": "62f501a2-8a14-47bd-a8a9-f19ed59953fd",
                "merchantRefNum": "payolution_verification_1517338241",
                "amount": 1000,
                "currencyCode": "EUR",
                "paymentType": "PAYOLUTION",
                "profile": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@paysafe.com",
                    "dateOfBirth": {
                        "day": 1,
                        "month": 1,
                        "year": 1970
                    }
                },
                "billingDetails": {
                    "street1": "Teststreet 19",
                    "zip": "3512 JS",
                    "city": "Utrecht",
                    "country": "NL",
                    "state": "UT"
                },
                "payolution": {
                    "descriptor": "Descriptor",
                    "productType": "INSTALLMENTS",
                    "analysis": [{
                            "key": "PAYOLUTION_CUSTOMER_GROUP",
                            "value": "TOP"
                        },
                        {
                            "key": "PAYOLUTION_MODULE_NAME",
                            "value": "PaymentModuleName"
                        },
                        {
                            "key": "PAYOLUTION_INVOICE_ID",
                            "value": "23498739478"
                        },
                        {
                            "key": "PAYOLUTION_ORDER_ID",
                            "value": "23498739478"
                        }
                    ],
                    "plans": {
                        "paymentDetails": [{
                                "originalAmount": 1000,
                                "totalAmount": 1026,
                                "minimumInstallmentFee": 0,
                                "duration": 3,
                                "interestRate": 14.95,
                                "effectiveInterestRate": 16.02,
                                "standardCreditInformationUrl": "https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=053c5369-c37a-431b-96f0-1981384ac993;duration=3",
                                "installments": [{
                                        "amount": 342,
                                        "due": "2018-02-03"
                                    },
                                    {
                                        "amount": 342,
                                        "due": "2018-03-03"
                                    },
                                    {
                                        "amount": 342,
                                        "due": "2018-04-03"
                                    }
                                ]
                            },
                            {
                                "originalAmount": 1000,
                                "totalAmount": 1032,
                                "minimumInstallmentFee": 0,
                                "duration": 4,
                                "interestRate": 14.95,
                                "effectiveInterestRate": 16.02,
                                "standardCreditInformationUrl": "https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=053c5369-c37a-431b-96f0-1981384ac993;duration=4",
                                "installments": [{
                                        "amount": 258,
                                        "due": "2018-02-03"
                                    },
                                    {
                                        "amount": 258,
                                        "due": "2018-03-03"
                                    },
                                    {
                                        "amount": 258,
                                        "due": "2018-04-03"
                                    },
                                    {
                                        "amount": 258,
                                        "due": "2018-05-03"
                                    }
                                ]
                            },
                            {
                                "originalAmount": 1000,
                                "totalAmount": 1044,
                                "minimumInstallmentFee": 0,
                                "duration": 6,
                                "interestRate": 14.95,
                                "effectiveInterestRate": 16.02,
                                "standardCreditInformationUrl": "https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=053c5369-c37a-431b-96f0-1981384ac993;duration=6",
                                "installments": [{
                                        "amount": 174,
                                        "due": "2018-02-03"
                                    },
                                    {
                                        "amount": 174,
                                        "due": "2018-03-03"
                                    },
                                    {
                                        "amount": 174,
                                        "due": "2018-04-03"
                                    },
                                    {
                                        "amount": 174,
                                        "due": "2018-05-03"
                                    },
                                    {
                                        "amount": 174,
                                        "due": "2018-06-03"
                                    },
                                    {
                                        "amount": 174,
                                        "due": "2018-07-03"
                                    }
                                ]
                            },
                            {
                                "originalAmount": 1000,
                                "totalAmount": 1062,
                                "minimumInstallmentFee": 0,
                                "duration": 9,
                                "interestRate": 14.95,
                                "effectiveInterestRate": 16.02,
                                "standardCreditInformationUrl": "https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=053c5369-c37a-431b-96f0-1981384ac993;duration=9",
                                "installments": [{
                                        "amount": 118,
                                        "due": "2018-02-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-03-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-04-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-05-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-06-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-07-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-08-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-09-03"
                                    },
                                    {
                                        "amount": 118,
                                        "due": "2018-10-03"
                                    }
                                ]
                            },
                            {
                                "originalAmount": 1000,
                                "totalAmount": 1080,
                                "minimumInstallmentFee": 0,
                                "duration": 12,
                                "interestRate": 14.95,
                                "effectiveInterestRate": 16.02,
                                "standardCreditInformationUrl": "https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=053c5369-c37a-431b-96f0-1981384ac993;duration=12",
                                "installments": [{
                                        "amount": 90,
                                        "due": "2018-02-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-03-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-04-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-05-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-06-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-07-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-08-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-09-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-10-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-11-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2018-12-03"
                                    },
                                    {
                                        "amount": 90,
                                        "due": "2019-01-03"
                                    }
                                ]
                            }
                        ],
                        "tacUrl": "https://test-payment.payolution.com/payolution-payment/infoport/termsandconditions?channelId=paysafe-installment",
                        "dataPrivacyConsentUrl": "https://test-payment.payolution.com/payolution-payment/infoport/dataprivacydeclaration?channelId=paysafe-installment"
                    }
                },
                "txnTime": "2018-01-30T18:50:41Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "code": "0.0.0",
                    "description": "The request was processed successfully.",
                    "id": "053c5369-c37a-431b-96f0-1981384ac993",
                    "processor": "PAYOLUTION",
                    "paymentType": "CL"
                },
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001186650/verifications/62f501a2-8a14-47bd-a8a9-f19ed59953fd"
                }]
            }

## Get Verification by ID [GET /accounts/{accountId}/verifications/{verificationId}]
<a name="getverification" title="Look Up a Verification"></a>

Click on **Get Verification by ID** above to see how to look up a [Verification](#verification) using the Verification ID, which is the *id* returned in the response to the Verification request.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + verificationId (string, required, `77e98a24-91ec-4cd7-bdfe-8039e189875e`) - This is your unique Verification identifier.

+ Request Get Verification (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "77e98a24-91ec-4cd7-bdfe-8039e189875e",
                "merchantRefNum": "payolution_1516135234",
                "amount": 1000,
                "currencyCode": "EUR",
                "paymentType": "PAYOLUTION",
                "profile": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "johndoe@paysafe.com",
                    "dateOfBirth": {
                        "day": 1,
                        "month": 1,
                        "year": 1970
                    }
                },
                "billingDetails": {
                    "street1": "Teststreet 19",
                    "zip": "3512 JS",
                    "city": "Utrecht",
                    "country": "NL",
                    "state": "UT"
                },
                "payolution": {
                    "paymentInformation": {
                        "paymentReference": "8771f3b0-45a0-4c8e-8fc7-7c2538828b0e",
                        "iban": "AT611904300234573201456",
                        "bic": "BFRILI22XXX",
                        "bankName": "Musterbank",
                        "accountHolderName": "Test Merchant"
                    },
                    "descriptor": "Descriptor",
                    "analysis": [{
                            "key": "PAYOLUTION_CUSTOMER_GROUP",
                            "value": "TOP"
                        },
                        {
                            "key": "PAYOLUTION_MODULE_NAME",
                            "value": "PaymentModuleName"
                        },
                        {
                            "key": "PAYOLUTION_INVOICE_ID",
                            "value": "23498739478"
                        },
                        {
                            "key": "PAYOLUTION_ORDER_ID",
                            "value": "23498739478"
                        }
                    ]
                },
                "txnTime": "2018-01-17T15:53:25Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "code": "0.0.0",
                    "description": "The request was processed successfully.",
                    "id": "e2a5f94a-7539-468f-a9f7-9fe76652c2ba",
                    "processor": "PAYOLUTION",
                    "paymentType": "PC"
                },
                "links": [{
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001141560/verifications/77e98a24-91ec-4cd7-bdfe-8039e189875e"
                }]
            }

# Void Authorizations [/voidauths]
<a name="voidauths" title="Void Authorizations"></a>

This is how you submit a Void Authorization (authorization reversal) request. You can void an Authorization only if it has not yet been settled.

**Note:** This operation is available only for payment methods that [support manual Settlement](https://developer.paysafe.com/en/rest-api/alternate-payments/getting-started/overview). If the authorization has already been fully settled, then you will not be able to void it and will need to [issue a Refund](#refundpayment) instead.

## Void a Previously Authorized Payment [POST /accounts/{accountId}/payments/{paymentId}/voidauths]
<a name="voidauth" title="Void a Previously Authorized Payment"></a>

Click on **Void a Previously Authorized Payment** above to see how to reverse (cancel) an existing authorization.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `6d62cd86-a268-48f1-a852-73d0ac1c4ece`) - This is your unique payment identifier.

+ Attributes
    + Include voidAuth
    + Include paymentType
    + Include links

+ Request Void an Authorization (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
              "merchantRefNum":"VA-1506981708"
            }

+ Response 201 (application/json)


    + Body

            {
                "id": "a839679f-0a23-4b8d-a3f9-1a92074579ab",
                "merchantRefNum": "VA-1506981708",
                "dupCheck": true,
                "amount": 1000,
                "paymentType": "PAYOLUTION",
                "currencyCode": "EUR",
                "txnTime": "2017-10-02T22:01:47Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "id": "b47bbaf7-3129-414c-ae83-9e6c58c2a65d",
                    "code": "0.0.0",
                    "description": "The request was processed successfully.",
                    "processor": "PAYOLUTION"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001109280/voidauths/a839679f-0a23-4b8d-a3f9-1a92074579ab"
                    },
                    {
                        "rel": "payment",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001109280/payments/6d62cd86-a268-48f1-a852-73d0ac1c4ece"
                    }
                ]
            }

## Get Void Authorization by ID [GET /accounts/{accountId}/payment/{paymentId}/voidauths/{voidauthId}]
<a name="getvoidauth" title="Look Up a Void Authorization"></a>

Click on **Get Void Authorization by ID** above to see how to look up a Void Authorization request using the ID returned in the response to the original request.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `6d62cd86-a268-48f1-a852-73d0ac1c4ece`) - This is your unique payment identifier.
    + voidauthId (string, required, `a839679f-0a23-4b8d-a3f9-1a92074579ab`) - This is your unique voidauth identifier.

+ Request Get Void Authorization (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)


    + Body

            {
                "id": "a839679f-0a23-4b8d-a3f9-1a92074579ab",
                "merchantRefNum": "VA-1506981708",
                "amount": 1000,
                "paymentType": "PAYOLUTION",
                "currencyCode": "EUR",
                "txnTime": "2017-10-02T22:01:47Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "id": "b47bbaf7-3129-414c-ae83-9e6c58c2a65d",
                    "code": "0.0.0",
                    "description": "The request was processed successfully.",
                    "processor": "PAYOLUTION"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001109280/voidauths/a839679f-0a23-4b8d-a3f9-1a92074579ab"
                    },
                    {
                        "rel": "payment",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001109280/payments/6d62cd86-a268-48f1-a852-73d0ac1c4ece"
                    }
                ]
            }

## List Void Authorizations [GET /accounts/{accountId}/payment/{paymentId}/voidauths]
<a name="listvoidauth" title="List Void Authorizations"></a>

Click on **List Void Authorizations** above to see how to retrieve a list of any Void Authorizations associated to a payment.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `6d62cd86-a268-48f1-a852-73d0ac1c4ece`) - This is your unique payment identifier.

+ Request List Void Authorizations (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "numberOfRecords": 1,
                    "limit": 10,
                    "page": 1
                },
                "voidAuths": [
                    {
                        "id": "a839679f-0a23-4b8d-a3f9-1a92074579ab",
                        "merchantRefNum": "VA-1506981708",
                        "amount": 1000,
                        "paymentType": "PAYOLUTION",
                        "currencyCode": "EUR",
                        "txnTime": "2017-10-02T22:01:47Z",
                        "status": "COMPLETED",
                        "gatewayResponse": {
                            "id": "b47bbaf7-3129-414c-ae83-9e6c58c2a65d",
                            "code": "0.0.0",
                            "description": "The request was processed successfully.",
                            "processor": "PAYOLUTION"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001109280/voidauths/a839679f-0a23-4b8d-a3f9-1a92074579ab"
                            },
                            {
                                "rel": "payment",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001109280/payments/6d62cd86-a268-48f1-a852-73d0ac1c4ece"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001109280/payments/6d62cd86-a268-48f1-a852-73d0ac1c4ece/voidauths?limit=10&offset=0&startDate=2017-09-02T22:19:03Z&endDate=2017-10-02T22:19:04Z"
                    }
                ]
            }

# Settlements [/settlements]
<a name="settlements" title="Settlements"></a>

If you specified manual Settlement on your payment request (i.e., with *settleWithAuth* = *false*), then you must manually POST the Settlement against
the Payment Authorization.  Settlement is the process of capturing funds from a previous authorization request to your merchant account. You can query the
Payment resource to find out the remaining amount available to settle.

You can settle all or part of an existing Payment Authorization. [Click here](https://developer.paysafe.com/en/rest-api/alternate-payments/getting-started/overview/) to see which payment types support manual settlement.

## Settle an Authorized Payment [POST /accounts/{accountId}/payments/{paymentId}/settlements]
<a name="settlement" title="Settle a Previously Authorized Payment"></a>

Click on **Settle an Authorized Payment** above to see an example of a settlement for a previous PAYSAFECARD Payment Authorization.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `21572c64-19eb-4d45-973f-fc03c6243158`) - This is your unique payment identifier.

+ Attributes
    + Include settlement
    + Include paymentTypeSettlement
    + Include payolution
    + Include paypal
    + Include paysafecard
    + Include links

+ Request Create Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "GR-1506977370",
                "dupCheck": true,
                "amount": 105,
                "currencyCode": "EUR"
            }

+ Response 201 (application/json)

    + Body

            {
                "id": "a99f93a7-a35c-4f9e-9b48-a7d588a53c32",
                "merchantRefNum": "GR-1506977370",
                "dupCheck": true,
                "amount": 105,
                "currencyCode": "EUR",
                "paymentType": "PAYSAFECARD",
                "txnTime": "2017-10-02T20:49:30Z",
                "availableToRefund": 105,
                "status": "COMPLETED",
                "gatewayResponse": {
                    "id": "b8a36850-e009-4d78-a4d5-9a1fec45153d",
                    "processor": "PAYSAFECARD"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001146950/settlements/a99f93a7-a35c-4f9e-9b48-a7d588a53c32"
                    },
                    {
                        "rel": "payment",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001146950/payments/21572c64-19eb-4d45-973f-fc03c6243158"
                    }
                ]
            }

## Get Settlement by ID [GET /accounts/{accountId}/settlements/{settlementId}]
<a name="getsettlement" title="Look Up a Settlement"></a>

Click on **Get Settlement by ID** above to look up a Settlement request using the ID returned in the response to the original request.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + settlementId (string, required, `a99f93a7-a35c-4f9e-9b48-a7d588a53c32`) - This is your unique Settlement identifier.

+ Request Get Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)

    + Body

            {
                "id": "a99f93a7-a35c-4f9e-9b48-a7d588a53c32",
                "merchantRefNum": "GR-1506977370",
                "dupCheck": true,
                "amount": 105,
                "currencyCode": "EUR",
                "paymentType": "PAYSAFECARD",
                "txnTime": "2017-10-02T20:49:30Z",
                "availableToRefund": 105,
                "status": "COMPLETED",
                "gatewayResponse": {
                    "id": "b8a36850-e009-4d78-a4d5-9a1fec45153d",
                    "processor": "PAYSAFECARD"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001146950/settlements/a99f93a7-a35c-4f9e-9b48-a7d588a53c32"
                    },
                    {
                        "rel": "payment",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001146950/payments/21572c64-19eb-4d45-973f-fc03c6243158"
                    }
                ]
            }


## List Settlements by Merchant Reference Number [GET /accounts/{accountId}/settlements/?merchantRefNum={merchantRefNum}]
<a name="listsettlement" title="List Settlements by Merchant Reference Number"></a>

Click on **List Settlements by Merchant Reference Number ID** above to look up Settlements using the merchant reference number used in the original request. This returns a collection of Settlement details, as *merchantRefNum* could be used for multiple requests when *dupCheck* is disabled.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + merchantRefNum (string, required, `GR-1506977370`) - This is your unique payment identifier.

+ Request List Settlements (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "numberOfRecords": 1,
                    "limit": 10,
                    "page": 1
                },
                "settlements": [
                    {
                        "id": "670c8464-f7bf-45da-ba53-972abf7701e4",
                        "merchantRefNum": "GR-1506977370",
                        "amount": 400,
                        "currencyCode": "EUR",
                        "paymentType": "SOFORT",
                        "txnTime": "2017-02-10T20:17:51Z",
                        "status": "COMPLETED",
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/settlements/670c8464-f7bf-45da-ba53-972abf7701e4"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/settlements?merchantRefNum=1486757872&limit=10&offset=0&startDate=2017-01-11T20:29:46Z&endDate=2017-02-10T20:29:47Z"
                    }
                ]
            }


## List Settlements for a Payment [GET /accounts/{accountId}/payment/{paymentId}/settlements]
<a name="listsettlementsid" title="List Settlements for a Payment"></a>

Click on **List Settlements for a Payment** above to retrieve a list of any Settlements associated to a payment.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `670c8464-f7bf-45da-ba53-972abf7701e4`) - This is your unique payment identifier.

+ Request List Settlements for a Payment(application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)


    + Body

            {
                "meta": {
                    "numberOfRecords": 1,
                    "limit": 10,
                    "page": 1
                },
                "settlements": [
                    {
                        "id": "670c8464-f7bf-45da-ba53-972abf7701e4",
                        "merchantRefNum": "GR-1506977370",
                        "amount": 400,
                        "currencyCode": "EUR",
                        "paymentType": "SOFORT",
                        "txnTime": "2017-02-10T20:17:51Z",
                        "status": "COMPLETED",
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/settlements/670c8464-f7bf-45da-ba53-972abf7701e4"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/payments/670c8464-f7bf-45da-ba53-972abf7701e4/settlements?limit=10&offset=0&startDate=2017-01-11T20:29:46Z&endDate=2017-02-10T20:29:47Z"
                    }
                ]
            }

# Refunds [/refunds]
<a name="refunds" title="Refunds"></a>

A Refund allows you to refund back to a consumer an amount that has previously been settled. You can issue either a full or a
partial Refund (or series of Refunds) against the initial Settlement, provided the combined Refund amount does not
exceed the original Settlement amount.

You can create a Refund against either an Authorized Payment or a Settlement. **Note:** If you process a partial Refund against a Settlement using the *settlements/settlementId/refunds* endpoint, if you want to Refund any of the remaining amount you must use the same endpoint. Similarly, if you process a partial Refund against a Payment Authorization using the *payments/paymentId/refunds* endpoint, if you want to Refund any of the remaining amount you must use the same endpoint.

## Refund a Payment [POST /accounts/{accountId}/payments/{paymentId}/refunds]
<a name="refundpayment" title="Refund a Payment"></a>

Click on **Refund a Payment** above to see how to submit a Refund request against a completed payment.

> NOTE: You can also issue a Refund against the Settlement.  Choose the right method depending upon your integration needs.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `25f6dadf-176a-415f-95c9-6ff39ff697ba`) - This is your unique payment identifier.

+ Attributes
    + Include refund
    + Include paymentTypeRefund
    + Include neteller
    + Include payolution
    + Include paypal
    + Include skrill
    + Include sofort
    + Include links

+ Request Refund a Payment (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "Ref-1506977370",
                "dupCheck": true,
                "paymentType": "SOFORT",
                "amount": 400,
                "currencyCode": "EUR"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "6565bce8-9ae2-4359-bc7c-48c2e560810b",
                "merchantRefNum": "Ref-1506977370",
                "amount": 400,
                "currencyCode": "EUR",
                "paymentType": "SOFORT",
                "txnTime": "2016-02-24T08:39:39Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "id": "9bcaa7f0dba44c64981881401794abby",
                    "code": "000.100.110",
                    "description": "Request successfully processed in 'Merchant in Integrator Test Mode'",
                    "processor": "SOFORT",
                    "paymentType": "RF"
                  },
                "links": [
                    {
                      "rel": "self",
                      "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1466458515/refunds/6565bce8-9ae2-4359-bc7c-48c2e560810b"
                    }
                  ]
                }

## Refund a Settlement [POST /accounts/{accountId}/settlements/{settlementId}/refunds]
<a name="refundsettlement" title="Refund a Settlement"></a>

Click on **Refund a Settlement** above to see how to submit a Refund request against a completed settlement.

> NOTE: You can also issue a Refund against the Authorized Payment.  Choose the right method depending upon your integration needs.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + settlementId (string, required, `25f6dadf-176a-415f-95c9-6ff39ff697ba`) - This is your unique payment identifier.

+ Request Refund a Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "Ref-1506977370",
                "dupCheck": true,
                "paymentType": "SOFORT"
                "amount": 400,
                "currencyCode": "EUR"
            }

+ Response 201 (application/json)

    + Body

            {
                "id": "6565bce8-9ae2-4359-bc7c-48c2e560810b",
                "merchantRefNum": "Ref-1506977370",
                "amount": 400,
                "currencyCode": "EUR",
                "paymentType": "SOFORT",
                "txnTime": "2016-02-24T08:39:39Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "id": "9bcaa7f0dba44c64981881401794abby",
                    "code": "000.100.110",
                    "description": "Request successfully processed in 'Merchant in Integrator Test Mode'",
                    "processor": "PAYON",
                    "paymentType": "RF"
                  },
                "links": [
                    {
                      "rel": "self",
                      "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1466458515/refunds/6565bce8-9ae2-4359-bc7c-48c2e560810b"
                    }
                  ]
                }

## Get Refund by ID [GET /accounts/{accountId}/refunds/{refundId}]
<a name="getrefund" title="Look Up a Refund"></a>

Click on **Get Refund by ID** above to see how to look up a Refund request using the ID returned in the response to the original request.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + refundId (string, required, `25f6dadf-176a-415f-95c9-6ff39ff697ba`) - This is your unique Refund identifier.

+ Request Get Refund (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "id": "6565bce8-9ae2-4359-bc7c-48c2e560810b",
                "merchantRefNum": "Ref-1506977370",
                "amount": 400,
                "currencyCode": "EUR",
                "paymentType": "SOFORT",
                "txnTime": "2016-02-24T08:39:39Z",
                "status": "COMPLETED",
                "gatewayResponse": {
                    "id": "9bcaa7f0dba44c64981881401794abby",
                    "code": "000.100.110",
                    "description": "Request successfully processed in 'Merchant in Integrator Test Mode'",
                    "processor": "PAYON",
                    "paymentType": "RF"
                  },
                "links": [
                    {
                      "rel": "self",
                      "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1234567891/refunds/6565bce8-9ae2-4359-bc7c-48c2e560810b"
                    }
                    {
                      "rel": "payment",
                      "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1234567891/payments/25f6dadf-176a-415f-95c9-6ff39ff697ba"
                    }
                  ]
                }

## List Refunds by Merchant Reference Number [GET /accounts/{accountId}/payments/{paymentId}/refunds/?merchantRefNum={merchantRefNum}]
<a name="listrefund" title="List Refunds by Merchant Reference Number"></a>

Click on **List Refunds by Merchant Reference Number** above to see how to look up Refunds using the merchant reference number used in the original request. This returns a collection of refund details, as *merchantRefNum* could be used for multiple requests when *dupCheck* is disabled.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + paymentId (string, required, `25f6dadf-176a-415f-95c9-6ff39ff697ba` - This is your unique payment identifier.
    + merchantRefNum (string, required, `Ref-1506977370`) - This is your unique Refund identifier.

+ Request List Refunds (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "numberOfRecords": 1,
                    "limit": 10,
                    "page": 1
                },
                "refunds": [
                    {
                        "id": "6565bce8-9ae2-4359-bc7c-48c2e560810b",
                        "merchantRefNum": "Ref-1506977370",
                        "amount": 400,
                        "currencyCode": "EUR",
                        "paymentType": "SOFORT",
                        "txnTime": "2017-02-10T20:17:51Z",
                        "status": "COMPLETED",
                        "gatewayResponse": {
                          "id": "9bcaa7f0dba44c64981881401794abby",
                          "code": "000.100.110",
                          "description": "Request successfully processed",
                          "processor": "PAYON",
                          "paymentType": "RF"
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/refunds/6565bce8-9ae2-4359-bc7c-48c2e560810b"
                            }
                            {
                                "rel": "payment",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/payments/25f6dadf-176a-415f-95c9-6ff39ff697ba"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1234567891/refunds?merchantRefNum=1486757872&limit=10&offset=0&startDate=2017-01-11T20:29:46Z&endDate=2017-02-10T20:29:47Z"
                    }
                ]
            }

# Returns [/returns]
<a name="returns" title="Returns"></a>

Returns transactions will be created by Paysafe if we receive a chargeback or return notification from the service provider, indicating that the Alternate Payments request never settled.

As a merchant, you cannot create a Return directly.

> **Note:** Currently only Klarna (Sofort) and Boku support Returns.

## Get Return by ID [GET /accounts/{accountId}/returns/{returnId}]
<a name="getreturn" title="Look Up a Return"></a>

Click on **Get Return by ID** above to see how to look up a Return using an ID.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + returnId (string, required, `81294868-e69a-4410-b592-46e2ab5b5673`) - This is your unique Return identifier.

+ Request Get Return (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "numberOfRecords": 1,
                    "limit": 10,
                    "page": 1
                },
                "returns": [
                    {
                        "id": "81294868-e69a-4410-b592-46e2ab5b5673",
                        "merchantRefNum": "GR-1506977370",
                        "amount": 400,
                        "currencyCode": "EUR",
                        "paymentType": "SOFORT",
                        "txnTime": "2017-02-10T20:20:00Z",
                        "status": "COMPLETED",
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/returns/81294868-e69a-4410-b592-46e2ab5b5673"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/payments/670c8464-f7bf-45da-ba53-972abf7701e4/returns?limit=10&offset=0"
                    },
                    {
                        "rel": "payments",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1486757865/payments/670c8464-f7bf-45da-ba53-972abf7701e4"
                    }
                ]
            }


## List Returns for a Settlement [GET /accounts/{accountId}/settlements/{settlementId}/returns]
<a name="listreturns" title="List Returns for a Settlement"></a>

Click on **List Returns for a Settlement** above to see how to retrieve a list of any Returns associated to a Settlement.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + settlementId (string, required, `2f6a9ba3-d1df-438a-b8f5-59106c8f830c`) - This is your unique Settlement identifier.

+ Request List Returns for a Settlement (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "numberOfRecords": 1,
                    "limit": 10,
                    "page": 1
                },
                "returns": [
                    {
                        "id": "455dc29c-26f3-43fb-b086-9b76672b17c2",
                        "merchantRefNum": "GR-1506977370",
                        "amount": 400,
                        "currencyCode": "EUR",
                        "paymentType": "SOFORT",
                        "txnTime": "2017-02-13T23:38:29Z",
                        "status": "COMPLETED",
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1487029001/returns/455dc29c-26f3-43fb-b086-9b76672b17c2"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1487029001/settlements/2f6a9ba3-d1df-438a-b8f5-59106c8f830c/returns?limit=10&offset=0"
                    },
                    {
                        "rel": "settlement",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1487029001/settlements/2f6a9ba3-d1df-438a-b8f5-59106c8f830c"
                    }
                ]
            }

# Return Reversals [/returnreversals]
<a name="returnreversals" title="Return Reversals"></a>

Return Reversal transactions will be automatically created by Paysafe if we receive a **late credit** notification after we have already issued a Return.

> **Note:** Currently only Sofort supports Return Reversals.

## List Return Reversals for a Return [GET /accounts/{accountId}/returns/{returnId}/returnreversals]
<a name="listreturnreversals" title="List Return Reversals for a Return"></a>

Click on **List Return Reversals for a Return** above to see how to retrieve a collection of Return Reversal details.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + returnId (string, required, `25f6dadf-176a-415f-95c9-6ff39ff697ba`) - This is your unique Return identifier.

+ Request List Return Reversals (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)


## Get Return Reversal by ID [GET /accounts/{accountId}/returns/{returnId}/returnreversals/{returnReversalId}]
<a name="getreturnreversal" title="Look Up a Return Reversal"></a>

Click on **Get Return Reversal by ID** above to see how to retrieve details for a single Return Reversal.  You can identify Return Reversals through the [List Return Reversals endpoint](#listreturnreversals).

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + returnId (string, required, `81294868-e69a-4410-b592-46e2ab5b5673`) - This is your unique Return identifier.
    + returnReversalId (string, required, `25f6dadf-176a-415f-95c9-6ff39ff697ba`) - This is your unique Return Reversal identifier.

+ Request Get Return Reversal (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)

# Standalone Credits [/standalonecredits]
<a name="standalonecredits" title="Standalone Credits"></a>

Unlike a refund, a Standalone Credit allows you to issue a credit transfer, or remittance transfer, to your consumers without requiring a previous Payment.

See [Standalone Credit Objects](#standaloneCredit) for payment type specific details.

| | | | |
|---|---|---|---|
|[![Skrill](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/skrill.png)](#pskrill)|[![Instarem](https://github.com/paysafegroup/paysafe_api_alternatepayments_v1/raw/master/images/payment_icons/instarem.png)](#instarem)|||

## Create a Standalone Credit [POST /accounts/{accountId}/standalonecredits]
<a name="createstandalonecredit" title="Create a Standalone Credit"></a>

Submit a Standalone Credit using a specific payment type.

Click on **Create a Standalone Credit** above to see how to submit a Standalone Credit request.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.

+ Attributes
    + Include standaloneCredit
    + Include paymentTypeStandaloneCredit
    + Include skrillStandaloneCredit
    + Include instarem    
    + Include links
    
+ Request Create Standalone Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


    + Body
    
            {
              "merchantRefNum": "XYZ3331102",
              "amount": 300,
              "currencyCode": "EUR",
              "paymentType": "SKRILL",
              "consumerIp": "206.172.46.138",
              "skrill": {
                "consumerId": "john.doe@mail.com",
                "emailSubject": "Payment for XYZ",
                "emailMessage": "Hi John, here is the payment I owe you"
              }
            }    


+ Response 200 (application/json)

    + Body
    
            {
                "id": "b3492142-b28b-415e-8504-62bbd452eed1",
                "gatewayReconciliationId": "AQAAAAAAZI",
                "merchantRefNum": "XYZ3331102",
                "dupCheck": true,
                "amount": 300,
                "currencyCode": "EUR",
                "paymentType": "SKRILL",
                "skrill": {
                    "consumerId": "john.doe@mail.com",
                    "emailSubject": "Payment for XYZ",
                    "emailMessage": "Hi John, here is the payment I owe you"
                },
                "txnTime": "2018-04-17T19:04:27Z",
                "status": "PENDING",
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001152240/standalonecredits/b3492142-b28b-415e-8504-62bbd452eed1"
                    }
                ]
            }    

## Get Standalone Credit by ID [GET /accounts/{accountId}/standalonecredits/{standaloneCreditId}]
<a name="getstandalonecredit" title="Get standalone Credit by ID"></a>

This is how you look up a Standalone Credit using the ID.

Click on **Get Standalone Credit by ID** above to see how to retrieve details for single Standalone Credit transaction.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + standaloneCreditId (string, required, `b3492142-b28b-415e-8504-62bbd452eed1`) - This is your unique standalonecredit identifier.

+ Request Get Standalone Credit (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY


+ Response 200 (application/json)

    + Body
    
            {
                "id": "b3492142-b28b-415e-8504-62bbd452eed1",
                "gatewayReconciliationId": "AQAAAAAAZI",
                "merchantRefNum": "XYZ3331102",
                "dupCheck": true,
                "amount": 300,
                "currencyCode": "EUR",
                "paymentType": "SKRILL",
                "skrill": {
                    "consumerId": "john.doe@mail.com",
                    "emailSubject": "Payment for XYZ",
                    "emailMessage": "Hi John, here is the payment I owe you"
                },
                "txnTime": "2018-04-17T19:04:27Z",
                "status": "PENDING",
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001152240/standalonecredits/b3492142-b28b-415e-8504-62bbd452eed1"
                    }
                ]
            }    


## List Standalone Credits by Merchant Reference Number [GET /accounts/{accountId}/standalonecredits/?merchantRefNum={merchantRefNum}]
<a name="liststandalonecredits" title="List Standalone Credits by Merchant Reference Number"></a>

This returns a collection of standalone credit details, as *merchantRefNum* could be used for multiple requests when *dupCheck* is disabled.

Click on **List Standalone Credits by Merchant Reference Number** above to look up Standalone Credits using the merchant reference number used in the original request. This returns a collection of Standalone Credit details, as *merchantRefNum* could be used for multiple requests when *dupCheck* is disabled.

+ Parameters
    + accountId (string, required, `1234567891`) - This is your unique account identifier.
    + merchantRefNum (string, required, `XYZ`) - This is your Standalone Credit identifier.

+ Request List Standalone Credits (application/json)

    + Headers

            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "numberOfRecords": 2,
                    "limit": 10,
                    "page": 1
                },
                "standaloneCredits": [
                    {
                        "id": "65574e9a-9e6b-4ce9-8217-63dce791c87b",
                        "merchantRefNum": "XYZ",
                        "dupCheck": true,
                        "amount": 2300,
                        "currencyCode": "PHP",
                        "paymentType": "INSTAREM",
                        "consumerIp": "127.0.0.1",
                        "txnTime": "2018-10-16T16:22:14Z",
                        "status": "PENDING",
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001269540/standalonecredits/65574e9a-9e6b-4ce9-8217-63dce791c87b"
                            }
                        ]
                    },
                    {
                        "id": "5082938b-1713-443b-974d-a3035c071ed5",
                        "merchantRefNum": "XYZ",
                        "dupCheck": true,
                        "amount": 1000,
                        "currencyCode": "PHP",
                        "paymentType": "INSTAREM",
                        "consumerIp": "127.0.0.1",
                        "txnTime": "2018-10-16T16:20:12Z",
                        "status": "COMPLETED",
                        "links": [
                            {
                                "rel": "self",
                                "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001269540/standalonecredits/5082938b-1713-443b-974d-a3035c071ed5"
                            }
                        ]
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "https://api.test.paysafe.com/alternatepayments/v1/accounts/1001269540/standalonecredits?merchantRefNum=GR&limit=10&offset=0&startDate=2018-09-16T16:22:17Z&endDate=2018-10-16T16:22:18Z"
                    }
                ]
            } 


# Data Structures

## `billingDetails`

+ `billingDetails` (object, optional) - This is the billing address of the consumer.
    + `street1`: `Street line 1` (string, required) - This is the first line of the street address in the billing address.
        _Length<=50_
    + `street2`: `Street line 2` (string, optional) - This is the second line of the street address in the billing address, if required (e.g., apartment number).
        _Length<=50_
    + `city`: `Calgary` (string, required) - This is the city in the billing address.
        _Length<=40_
    + `state`: `AB` (string, required) - See Province Codes or State Codes for Canada or the United States.
    + `country`: `CA` (string, required) - The ISO 3166-1 alpha-2 code for the consumer's billing address (e.g., Germany = DE, JP=Japan. CA=Canada).
    + `zip`: `T3H3L3` (string, required) - This is the postal/zip code in the billing address.

## `boku`

+ `boku` (object, optional) - Optional attributes that can be passed when making a BOKU payment request.
    + `descriptor` : `XYZ Merch #438A` (string, required) - The descriptor that will be shown on the consumer's statement.
    + `consumerId` : `CUS_12345677` (string, required) - Consumer identifier in merchant system.  This value is used to perform payment transaction risk checks which are intended to limit fraud targeted at using many MSISDNs by the same consumer account in a merchant system.
    + `consumerCountry` : `US` (string, required) - The ISO 3166-1 alpha-2 code for the consumer's mobile country of registration (e.g., Germany = DE, JP=Japan. CA=Canada).
    + `consumerMobilePhone` : `17802323333` (string, required) - The consumer's mobile phone number.  Full number including international dialing code (country code).

## `bokuGatewayResponse`

+ `gatewayResponse` (object)- These are the details returned from the external gateway.

    _Read Only_
    
    + Properties
        + `processor` : `BOKU` (string)
        + `action` : `prepare` (string)
        + `trx-id` : `da481fcf-ac0f-4b36-b84b-7e-a5844d3f` (string) -  - The unique identifier for the transaction provided by the gateway.
        + `result-code` : `0`
        + `result-msg` : `Operation Successful` (string)

## `dateOfBirthPayolution`

+ `dateOfBirth` (object, required) - This is the consumer's date of birth.
    + Properties
        + `day` : 24 (string, required)
        + `month` : 12 (string, required)
        + `year` : 1981 (string, required)

## `giropay`

+ `giropay` (object, optional) - Optional attributes that can be passed when making a GIROPAY payment request.
    + Properties
        + descriptor : `XYZ Merch #438A` (string, optional) - The descriptor that will be shown on the consumer's statement.

## `giropayGatewayResponse`

+ `gatewayResponse` (object)- These are the details returned from the external gateway.

    _Read Only_

    + Properties
        + `processor` : `GIROPAY` (string)
        + `txId` : `SIM001270` (string)
        + `returnCode`: `0`

## `installment`

+ `installments` (object)
    + `amount` : `1000` (number) - This is the amount of the installment payment.
    + `due` : `2013-07-16` (string) - This is the due date of the installment payment.

## `instarem`

+ `instarem` (object, optional) - Optional attributes that can be passed when making a INSTAREM  instrequest.
    + Properties
        + descriptor : `XYZ Merch #438A` (string, required) - This is the merchant descriptor that will be displayed on the consumer's bank statement.
        + purposeCode (enum, required) - This is the Instarem purpose code associated with the required.

            + Default: `IR001`
        
            + Members
                + `IR001` - Transfer to own account
                + `IR002` - Family Maintenance
                + `IR003` - Education-related student expenses
                + `IR004` - Medical Treatment
                + `IR005` - Hotel Accomodation
                + `IR006` - Travel
                + `IR007` - Utility Bills
                + `IR008` - Repayment of Loans
                + `IR009` - Tax Payment
                + `IR010` - Purchase of Residential Property
                + `IR011` - Payment of Property Rental
                + `IR012` - Insurance Premium
                + `IR013` - Product indemnity insurance
                + `IR014` - Insurance Claims Payment
                + `IR015` - Mutual Fund Investment
                + `IR016` - Investment in Shares
                + `IR017` - Donations
                + `IR01801` - Information Service Charges
                + `IR01802` - Advertising & Public relations-related expenses
                + `IR01803` - Royalty fees, trademark fees, patent fees, and copyright fees
                + `IR01804` - Fees for brokers, front end fee, commitment fee, guarantee fee and custodian fee
                + `IR01805` - Fees for advisors, technical assistance, and academic purpose\_code_number, including remuneration for specialists
                + `IR01806` - Representative office expenses
                + `IR01807` - Construction costs/expenses
                + `IR01808` - Transportation fees for goods
                + `IR01809` - For payment of exported goods
                + `IR01810` - Delivery fees for goods
                + `IR01811` - General Goods Trades - Offine trade


## `payolutionGatewayResponse`

+ `gatewayResponse` (object)- These are the details returned from the external gateway.

    _Read Only_

    + Properties
        + `id`: `4867bb8ce543409dbe1187849af28107` - The unique identifier for the transaction provided by the gateway.
        + `code`: `000.200.000`
        + `description`: `Transaction Pending`
        + `processor`: `PAYOLUTION`
        + `paymentType`: `DD`

## `link`
+ rel : self
+ href : `https://api.test.paysafe.com/alternatepayments/v1/accounts/1466458515/payments/e50e19a6-8edd-44ec-abc4-18d0a97d51d8`

## `links`
+ links (array[link]) - This is an array of links related to the resource.

    Typically you will have reference to any parent resources, and a reference to the child resource (if applicable).
    You may also see links for any call to action flows.  For example, when creating a payment that involves a redirect, the response will include a *redirect_payment* rel that you must direct your consumer to.

    _Read Only_

## `neteller`

+ `neteller` (object)  - Optional attributes that can be passed when making a NETELLER payment request.
    + `consumerId`: `john.doe@email.com` (string) : Email address or NETELLER account ID of the consumer who is making the payment. If provided, this field is hidden on the payment form. If left empty, the consumer has to enter their email address.
    + `consumerVerificationId`: `123123` (string) : The consumer's NETELLER secure ID, or two-step authorization token generated on their device.
    + `language`: `EN` (string) : The 2 character preferred language code for the consumer (e.g., EN, FR).
    + `logoUrl`: `https://mysite.com/logo.png` (string) : The URL of the logo which you would like to appear in the top right of the Skrill page. The logo must be accessible via HTTPS or it will not be shown. The logo will be resized to fit. Avoid large images (much greater than 256 by 256px) to minimise the page loading time.
    + `detail1Description`: `description` (string) : You can show additional details about the product in the More Information section in the header of Quick Checkout.
    + `detail1Text`: `detail text` (string) : The detail1Text is shown next to the detail1Description in the More Information section in the header of the payment form with the other payment details. The detail1Description combined with the detail1Text is shown in the more information field of the merchant account history CSV file. Using the example values, this would be Product ID: 4509334. <br/>Note: If a consumer makes a purchase using Skrill Wallet this information will also appear in the same field in their account history.

## `payment`

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., Settlements.

    _Read Only_

+ `gatewayReconciliationId`: `QAAAAABHCI` (string) - Transaction identifier that can be used to reconcile this transaction with the provider gateway.

    _Read Only_
    
+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `dupCheck`: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request.

    + Default: true

+ `consumerIp`: `142.44.111.22` (string) - This is the consumers IP address.

+ `settleWithAuth`: `true` (boolean, optional) - This indicates whether the request is an Authorization only (no Settlement), or a Purchase (Authorization and Settlement).

    To find out whether an authorization has been settled, check the *availableToSettle* element.
    If the amount is 0, the authorization has been fully settled.

    + Default: true

+ `availableToSettle`: `2500` (number) - This is the amount remaining to settle, in minor units.

    _Read Only_

+ `availableToRefund`: `2500` (number) - This is the amount remaining to refund, in minor units.

    _Read Only_

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units.

    _max=999999999_

+ `verificationId`: `2f6f0150-2f08-43be-ad42-aa89fafde792` (string) - This is the ID returned in the response to a [Verification request](#createverification). **Note:** This parameter is **required** if the *productType* is set to *INSTALLMENTS* for the *payolution* object.

+ `currencyCode`: `EUR` (string) - This is the currency of the payment. Defaults to the account currency.

    _Read Only_

+ Include profile
+ Include billingDetails
+ Include shippingDetails
+ Include returnLinks
+ `txnTime`: `2015-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `updatedTime`: `2016-01-01T04:5:55Z` (string) - Indicates the last updated time for the resource.

    _Read Only_

+ `status` (enum) - This is the status of the request.

    _Read Only_
    
    + Default: `PROCESSING` 

    + Members
        + `RECEIVED`
        + `PENDING`
        + `PROCESSING`
        + `COMPLETED`
        + `CANCELLED`
        + `FAILED`
        + `ERROR`
        + `EXPIRED`

+ `statusReason` (enum) - Description for why the status changed.

    _Read Only_
    
    + Default: `USER_CANCELLED`

    + Members
        + `USER_CANCELLED`
        + `MERCHANT_CANCELLED`
        + `AUTH_VOIDED`
        + `AUTH_EXPIRED`

+ `statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.

    _Read Only_
    
+ Include rapidTransferGatewayResponse

## paymentDetails

+ `paymentDetails` (object) - Information about payment installments, including due dates and amounts.
    _Read Only_
    + Properties
        + Include installment
        + `originalAmount`:`2500` (number) -  This is the original amount of the Verification, in minor units.
        + `totalAmount`:`2575` (number) - This is the total amount to be paid by the consumer (i.e., the sum of all installments).
        + `minimumInstallmentFee`:`0` (number) - This is the minimum installment fee.
        + `duration`:`3` (number) - This is the duration, in months, of the payment plan.
        + `interestRate`:`8.75` (number) - This is the interest rate of the payment plan.
        + `effectiveInterestRate`:`9.00` (number) - This is the effective interest rate of the payment plan.
        + `standardCreditInformationUrl`:`https://test-payment.payolution.com/payolution-payment/rest/query/customerinfo/pdf?trxId=Tx-pekwnp638te&duration=3` (string) - This is a URL pointing to a PDF file containing the full credit information in the standard European consumer credit information form.

## `paymentType`

+ `paymentType` (enum, required) - Specifies the type of payment. If applicable, you can pass additional attributes for the payment type. See [Payment Objects](#Payment Objects)

    + Members
        + `BOKU`
        + `GIROPAY`
        + `INTERAC`
        + `NETELLER`
        + `PAYSAFECARD`
        + `PAYSAFECASH`
        + `PAYOLUTION`
        + `PAYPAL`
        + `RAPIDTRANSFER`
        + `SKRILL`
        + `SOFORT`

## `paymentTypeRefund`

+ `paymentType` (enum) - Specifies the type of payment. If applicable, you can pass additional attributes for the payment type. See [Payment Objects](#Payment Objects)

    + Members
        + `NETELLER`
        + `PAYOLUTION`
        + `PAYPAL`
        + `SKRILL`
        + `SOFORT`

## `paymentTypeStandaloneCredit`

+ `paymentType` (enum) - Specifies the type of payment. If applicable, you can pass additional attributes for the payment type. See [Payment Objects](#Payment Objects)

    + Members
        + `SKRILL`
        + `INSTAREM`

## `paymentTypeSettlement`

+ `paymentType` (enum) - Specifies the type of payment. If applicable, you can pass additional attributes for the payment type. See [Payment Objects](#Payment Objects)

    + Members
        + `PAYOLUTION`
        + `PAYPAL`
        + `PAYSAFECARD`
        + `PAYSAFECASH`

## `paymentTypeVerification`

+ `paymentType` (enum, required) - Specifies the type of payment. If applicable, you can pass additional attributes for the payment type. See [Payment Objects](#Payment Objects)

    + Members
        + `PAYOLUTION`

## `paymentTypeVoidauth`

+ `paymentType` (enum) - Specifies the type of payment. If applicable, you can pass additional attributes for the payment type. See [Payment Objects](#Payment Objects)

    + Members
        + `PAYOLUTION`
        + `PAYPAL`
        + `PAYSAFECARD`
        + `PAYSAFECASH`

## `payolution`

+ `payolution` (object) - Parameters used in a PAYOLUTION request. **Note:** The *payolution* object is required for *verification* requests.

    + Properties
        + `descriptor`: `Order with ID 4ab2` (string) - This is the merchant descriptor that will be displayed on the consumer's bank statement.
        + Include productType
        + Include sepa
        + Include plans
        + `planDuration`: `3` (number) - This is the duration, in months, of the plan selected by the consumer. **Required** for [Payment Authorization](#createauthorization) request when *productType*=INSTALLMENTS.
        + Include payolutionPaymentInformation
        + Include payolutionAnalysis

## `payolutionPaymentInformation`

+ `paymentInformation` (object) - This is the information that tells the consumer where to send the payment.

    _Read Only_

    + Properties
        + `paymentReference`: `YTTR-WMQX-KLGW` (string) - The string to use as a reason for the payment.
        + `iban`: `AT611904300234573201456` (string) - The IBAN to send the payment to.
        + `bic`: `BFRILI22XXX` (string) - The BIC of the bank to send the payment to.
        + `bankName`: `Musterbank` (string) - This is the name of the bank to send the payment to.
        + `accountHolderName`: `Test Merchant` (string) - This is the name of the beneficiary.

## `payolutionAnalysis`

+ `analysis` (array) - This object is a list of key,value pairs containing additional information for analysis and to improve Payolution's risk assessment processes.
    + `key`: `PAYOLUTION_CUSTOMER_GROUP` (string)
    + `value`: `TOP` (string)

## `paypal`

+ `paypal` (object)  - Optional attributes that can be passed  when making a PAYPAL payment request.

    + Properties
        + `consumerId`: `john.doe@email.com` (string) - This is the email of the customer at login.
            _Length<=255_
        + `consumerMessage`: `The message for the consumer.` (string) - This is the message that is displayed to the consumer.
            _Length<=165_
        + `recipientDescription`: `Our business ltd.` (string) - This is the label that overrides the business description.
            _Length<=127_
        + `language`: `US` (string) - This is the locale of pages that the PayPal experience displays.
            _Length=2_
        + `shippingPreference` (enum) - This is the shipping preference.

            + Default: `GET_FROM_FILE`

            + Members
                + GET_FROM_FILE
                + NO_SHIPPING
                + SET_PROVIDED_ADDRESS
        + `orderDescription`: `Payment for order` (string) - This is the order description that will be displayed on the PayPal page.

## `paysafecardGatewayResponse`

+ `gatewayResponse` (object) - These are the details returned from the external gateway.

    _Read Only_

    + Properties
        + `id`: `9bcaa7f0dba44c64981881401794abby` - The unique identifier for the transaction provided by the gateway.
        + `code`: `000.100.110` (string)
        + `description`: `Request successfully processed` (string)
        + `processor`: `PAYSAFECARD` (enum)
        + `paymentType`: `DB` (string)

## `payonGatewayResponse`

+ `gatewayResponse` (object) - These are the details returned from the external gateway.

    _Read Only_

    + Properties
        + `id`: `9bcaa7f0dba44c64981881401794abby` - The unique identifier for the transaction provided by the gateway.
        + `code`: `000.100.110` (string)
        + `description`: `Request successfully processed in 'Merchant in Integrator Test Mode'` (string)
        + `processor`: `PAYON`
        + `paymentType`: `RF` (string)

## `paysafecard`

+ `paysafecard` (object)  - Optional attributes that can be passed  when making a PAYSAFECARD payment request.
    + `consumerId`: `john.doe@email.com` (string) : The unique identifier of the customer at the merchant. If any personal data (e.g. customer's user name, email address, etc.) is used here, it has to be encrypted or hashed for security reasons.
    + `ageRestriction`: 18 (number) : Restricts payments to my paysafecard customers only, who are equal to or older than the specified age. Please note\: This means that it is required that the customer has a registered my paysafecard account to make the payment. By default registering for account requires a min age of 18 (may vary per country).
    + `kycLevelRestriction` (enum) - These values refer to the KYC level of the customer's my paysafecard account. Depending on the country, my paysafecard accounts are offered with SIMPLE and/or FULL customer identification.

        + Default: `FULL`

        + Members
            + FULL
            + SIMPLE

    + `countryRestriction`: `DE` (string) : The ISO 3166-1 alpha-2 code of the country to which the transaction will be restricted.

## `paysafecash`

+ `paysafecash` (object)  - Optional attributes that can be passed  when making a PAYSAFECASH payment request.
    + `consumerId`: `john.doe@email.com` (string) : The unique identifier of the customer at the merchant. If any personal data (e.g. customer's user name, email address, etc.) is used here, it has to be encrypted or hashed for security reasons.
    + `ageRestriction`: 18 (number) : Restricts payments to my paysafecard customers only, who are equal to or older than the specified age. Please note\: This means that it is required that the customer has a registered my paysafecard account to make the payment. By default registering for account requires a min age of 18 (may vary per country).
    + `kycLevelRestriction` (enum) - These values refer to the KYC level of the customer's my paysafecard account. Depending on the country, my paysafecard accounts are offered with SIMPLE and/or FULL customer identification.

        + Default: `FULL`
        
        + Members
            + FULL
            + SIMPLE

    + `countryRestriction` : `DE` (string) : The ISO 3166-1 alpha-2 code of the country to which the transaction will be restricted.

## `productType`

+ `productType` (enum) - This is the type of payment request to use for for a [Payment Authorization](#createauthorization). **Note:** You must have a separate merchant account for each product type, i.e., one for INVOICE and one for INSTALLMENTS.

    + Default:INVOICE

    + Members
        + `INVOICE` - Use for regular Payment Authorization request.
        + `INSTALLMENTS` - Use when consumer has opted for installment payments.

## `profile`

+ `profile` (object, optional) - These are some details about the consumer.
    + `firstName`: `Stan` (string) - This is the consumer's first name.
        _Length<=80_
    + `lastName`: `Smith` (string) - This is the consumer's last name.
        _Length<=80_
    + `email`: `stan.smith@email.com` (string, required) - This is the consumer's email address.
        _Length<=255_

## `profilePayolution`

+ `profile` (object, required) - These are some details about the consumer.
    + `title`: `Mr.` (string) - This is the consumer's title, e.g., Ms.
    + `firstName`: `Stan` (string, required) - This is the consumer's first name.
        _Length<=80_
    + `lastName`: `Smith` (string, required) - This is the consumer's last name.
        _Length<=80_
    + `email`: `stan.smith@email.com` (string, required) - This is the consumer's email address.
        _Length<=255_
    + Include dateOfBirthPayolution
    + `gender` (enum) - This is the consumer's gender.
    
        + Default: `M`

        + Members
            + M - Male
            + F - Female
            + O - Other
            + N - Not specified

    + `phone`: `509 444-8888` (string) - This is the consumer's primary phone.
    + `cellPhone`: `This is the consumer's cell phone.
    + `ip`: `127.0.0.1` (string, required) - This is the consumer's IP address.
        _Length<=50_
    + `locale`: `en` (string) - ISO language code representing the preferred language for this profile.

## `plans`

+ `plans` (object, optional) - These are details about the installment plan, including amount and due date plus some additional parameters like interest, etc.
    + Include paymentDetails
    + `tacUrl`: `https://test-payment.payolution.com/payolution-payment/infoport/termsandconditions?channelId=paysafe-installment` (string) - This is a URL pointing to the Terms and Conditions for the payment plan.
        _Read Only_
    + `dataPrivacyConsentUrl`: `https://test-payment.payolution.com/payolution-payment/infoport/dataprivacydeclaration?channelId=paysafe-installment` (string) - This is a URL pointing to the data privacy declaration for the payment plan.
        _Read Only_

## `rapidTransfer`

+ `rapidTransfer` (object) - Optional attributes that can be passed when making a RAPIDTRANSFER payment request.
    + `descriptor` : `XYZ Merch #438A` (string, optional) - The descriptor that will be shown on the consumer's statement.
    + Include sepa

## `rapidTransferGatewayResponse`

+ `gatewayResponse` (object)- These are the details returned from the external gateway.

    _Read Only_

    + Properties
        + `bankTimestamp`: `2017-09-19 07:34:09`
        + `returnCode`: `0`
        + `requestDateTime`: `2017-09-19T03:34:09.542-04:00`
        + `durationMillis`: `113`
        + `id`: `01549f7d-eca7-4081-b63c-39f594f83c71`
        + `processor`: `RAPIDTRANSFER`

## `refund`

+ `id`: `6565bce8-9ae2-4359-bc7c-48c2e560810b` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., lookups.

    _Read Only_

+ `gatewayReconciliationId`: `QAAAAABHCI` (string) - Transaction identifier that can be used to reconcile this transaction with the provider gateway.

    _Read Only_

+ `merchantRefNum`: `GR-1506977370` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.

    _length<=255_

+ `dupCheck`: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request.

    + Default: true

+ `amount`: `400` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_

+ `currencyCode`: `EUR` (string, required) - This is the currency of the payment.

    _length=3_

    + Default: `The account currency`

+ `txnTime`: `2015-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `updatedTime`: `2016-01-01T04:5:55Z` (string) - Indicates the last updated time for the resource.

    _Read Only_

+ `statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.

    _Read Only_

+ `status` (enum) - This is the status of the transaction request.

    _Read Only_

    + Default: `PROCESSING`

    + Members
        + `RECEIVED`
        + `PENDING`
        + `PROCESSING`
        + `COMPLETE`
        + `CANCELLED`
        + `FAILED`
        + `ERROR`
        + `EXPIRED`

+ Include rapidTransferGatewayResponse

## `returnLinks`

+ `returnLinks` (array) - This is an array of return links.
    + (object)
        + `rel` (enum, required) - The final transaction status that determines where to return the consumer to. ('default' is mandatory)
        
            + Default: `default`
            
            + Members
                + `default` - The default return url, will be used if specific status return url is not defined.
                + `on_pending`
                + `on_completed`
                + `on_failed`
                + `on_cancelled`
                + `on_error`
        + `href`: `https://mysite.com/return` (string, required) - The TLS secured endpoint to return the consumer to.

## `settlement`

+ `id`: `30381792-1237-4868-8fd3-73196e94d009` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., Refunds.

    _Read Only_

+ `gatewayReconciliationId`: `QAAAAABHCI` (string) - Transaction identifier that can be used to reconcile this transaction with the provider gateway.

    _Read Only_

+ `merchantRefNum`: `GR-1506977370` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request unless you set *dupCheck* to false.

    _length<=255_

+ `dupCheck`: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request.

    + Default: true

+ `amount`: `105` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_

+ `currencyCode`: `EUR` (string, required) - This is the currency of the payment.

    _length=3_

    + Default: `The account currency`

+ `txnTime`: `2015-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `updatedTime`: `2016-01-01T04:5:55Z` (string) - Indicates the last updated time for the resource.

    _Read Only_

+ `statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.

    _Read Only_

+ `availableToRefund`: `100` (number, optional) - This is the amount of the authorization remaining to refund, in minor units.  It is visible only if no Refunds are done on any of the corresponding Settlements for this payment.

    _Read Only_

+ `status` (enum) - This is the status of the request.

    _Read Only_

    + Default: `COMPLETED`

    + Members
        + `RECEIVED`
        + `PENDING`
        + `PROCESSING`
        + `COMPLETED`
        + `CANCELLED`
        + `FAILED`
        + `ERROR`
        + `EXPIRED`

+ Include paysafecardGatewayResponse

## `sepa`

+ `sepa` (object)

    _Required only for Verification requests, and only if currency is EUR._

    + Properties
        + `country`: `DE` (string) - The ISO 3166-1 alpha-2 code for the consumer's bank (e.g., Germany = DE, JP=Japan. CA=Canada).
        + `iban`: `AT611904300234573201456` (string) - The IBAN to send the payment to.
        + `bic`: `BFRILI22XXX` (string) - The BIC of the bank to send the payment to.
        + `accountHolderName`: `Test Merchant` (string) - This is the name of the beneficiary.

## `shippingDetails`

+ `shippingDetails` (object, optional) - This is the shipping address of the consumer.
    + `carrier`:`FEX` (enum, optional) - This is the shipment carrier.

        + Members
            + APC – APC Overnight
            + APS – Anpost
            + CAD – Canada Postal Service
            + DHL – DHL
            + FEX – Fedex
            + RML – Royal Mail
            + UPS – United Parcel Service
            + USPS – United States Postal Service
            + CLK – CityLink
            + EMS – EMS
            + NEX – Nexworldwide
            + OTHER
    + `shipMethod`:`N` (enum, optional) - This is the method of shipment.

         + Members
            + N – Next Day/Overnight
            + T – Two-Day Service
            + C – Lowest Cost
            + O – Other
    + `recipientName`:`Jane Jones` (string, optional) - This is the name of the person receiving the goods.
        _Length<=255_
    + `company`:`Acme Ltd` (string, optional) - This is the name of the company receiving the goods.
        _Length<=255_
    + `street1`: `Street line 1` (string, required) - This is the first line of the street address in the shipping address.
        _Length<=50_
    + `street2`: `Street line 2` (string, optional) - This is the second line of the street address in the shipping address, if required (e.g., apartment number).
        _Length<=50_
    + `city`: `Calgary` (string, required) - This is the city in the shipping address.
        _Length<=40_
    + `state`: `AB` (string, required) - See Province Codes or State Codes for Canada or the United States.
    + `country`: `CA` (string, required) - The ISO 3166-1 alpha-2 code for the consumer's shipping address (e.g., Germany = DE, JP=Japan. CA=Canada).
    + `zip`: `T3H3L3` (string, required) - This is the postal/zip code in the shipping address.
        _Length=1-10_

+ `status`:`PROCESSING` (enum) - This is the status of the request.

    _Read Only_

    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `FAILED`
        + `ERROR`


## `skrill`

+ `skrill` (object)  - Optional attributes that can be passed when making a SKRILL payment request.
    + `consumerId`: `john.doe@email.com` (string) : Email address of the consumer who is making or receiving the payment. If provided, this field is hidden on the payment form. If left empty, the consumer has to enter their email address.
    + `recipientDescription`: `item xyz` (string) : A description to be shown on the Skrill payment page in the logo area if there is no logo\_url parameter. If no value is submitted and there is no logo, the pay\_to\_email value is shown as the recipient of the payment.
    + `language`: `EN` (string) : The 2 character preferred language code for the consumer (e.g., EN, FR).
    + `logoUrl` : `https://mysite.com/logo.png` (string) : The URL of the logo which you would like to appear in the top right of the Skrill page. The logo must be accessible via HTTPS or it will not be shown. The logo will be resized to fit. Avoid large images (much greater than 256 by 256px) to minimise the page loading time.
    + `detail1Description` : `description` (string) : You can show additional details about the product in the More information section in the header of Quick Checkout.
    + `detail1Text` : `detail text` (string) : The detail1Text is shown next to the detail1Description in the More Information section in the header of the payment form with the other payment details. The detail1Description combined with the detail1Text is shown in the more information field of the merchant account history CSV file. Using the example values, this would be Product ID: 4509334. <br/>Note: If a consumer makes a purchase using Skrill Wallet this information will also appear in the same field in their account history.

## `skrillStandaloneCredit`

+ `skrill` (object)  - Optional attributes that can be passed when making a SKRILL payment request.
    + `consumerId`: `john.doe@email.com` (string) : Email address of the consumer who is receiving the payment. 
    + `emailSubject`: `item xyz` (string) : Subject line to use in consumer email.
    + `emailMessage`: `EN` (string) : Message to use in consumer email.

    
## `sofort`

+ `sofort` (object) - Optional attributes that can be passed when making a SOFORT payment request.
    + `descriptor` : `XYZ Merch #438A` (string, optional) - The descriptor that will be shown on the consumer's statement.
    + `sepa` (sepa)

## `sofortGatewayResponse`

+ `gatewayResponse` (object) - These are the details returned from the external gateway.

    _Read Only_

    + Properties
        + `id`: `0000-014100-SOFRTSIM-0000` - The unique identifier for the transaction provided by the gateway.
        + `code`: `0` (string)
        + `description`: `Request successfully processed` (string)
        + `processor`: `SOFORT`
        + `paymentType`: `DB` (string)

## `standaloneCredit`

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ggf697ba` (string) - This is the ID returned in the response. 

    _Read Only_

+ `gatewayReconciliationId`: `QAAAAABHCI` (string) - Transaction identifier that can be used to reconcile this transaction with the provider gateway.

    _Read Only_

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `dupCheck`: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request.

    + Default: true

+ `consumerIp`: `212.22.14.41` (string, optional) - This is the consumers IP address.

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_

+ `currencyCode`: `EUR` (string) - This is the currency of the request. Defaults to the account currency.

    _Read Only_

+ Include paymentTypeStandaloneCredit
+ Include profile
+ Include billingDetails

+ `txnTime`: `2015-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `updatedTime`: `2016-01-01T04:5:55Z` (string) - Indicates the last updated time for the resource.

    _Read Only_

+ `statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.

    _Read Only_

    
+ `status` (enum) - This is the status of the request.

    _Read Only_
    
    + Default: `PROCESSING`

    + Members
        + `RECEIVED`
        + `PENDING`
        + `PROCESSING`
        + `COMPLETED`
        + `CANCELLED`
        + `FAILED`
        + `ERROR`
        + `EXPIRED`


## `standaloneCreditBatch`

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ggf697ba` (string) - This is the ID returned in the response. 

    _Read Only_

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `dupCheck`: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request.

    + Default: true

+ `totalAmount`: `100050` (number, required) - This is the total sum of all amounts of batch items, in minor units

    For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.
    NOTE: If the merchant account is set up for a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.

    _max=99999999999_

+ `currencyCode`: `EUR` (string) - This is the currency of the merchant account, e.g. USD or CAD and is returned in the response.

    _Read Only_

+ Include paymentTypeStandaloneCredit
+ Include profile
+ Include billingDetails

+ `txnTime`: `2015-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `updatedTime`: `2016-01-01T04:5:55Z` (string) - Indicates the last updated time for the resource.

    _Read Only_

+ `statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.

    _Read Only_
    
+ `status` (enum) - This is the status of the request.

    _Read Only_
    
    + Default: `PROCESSING`

    + Members
        + `RECEIVED`
        + `PENDING`
        + `PROCESSING`
        + `COMPLETED`
        + `FAILED`
        + `ERROR`


## `verification`

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., Settlements.

    _Read Only_

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `dupCheck`: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request.

    + Default: true

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units. No amount is actually processed when doing a Verification request.

    _max=99999999999_

+ `currencyCode`: `EUR` (string) - This is the currency of the payment.

    _Read Only, length=3_

+ Include profilePayolution
+ Include billingDetails
+ Include shippingDetails

+ `txnTime`: `2015-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `updatedTime`: `2016-01-01T04:5:55Z` (string) - Indicates the last updated time for the resource.

    _Read Only_

+ `statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.

    _Read Only_

+ `status`:`PROCESSING` (enum) - This is the status of the request.

    _Read Only_

    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `FAILED`
        + `ERROR`

+ Include payolutionGatewayResponse

## `voidAuth`

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response. This ID can be used for future associated requests.

    _Read Only_

+ `merchantRefNum`: `VA-1506981708` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `dupCheck`: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the *merchantRefNum* has already been used in a previous request.

    + Default: true

+ `amount`: `100` (number, optional) - This is the amount of the request, in minor units.

    _max=99999999999_

+ `currencyCode`: `EUR` (string) - This is the currency of the request.

    _length=3_
    _Read Only_

    + Default: `The account currency`

+ `txnTime`: `2015-12-11T16:33:49Z` (string) - This is the date and time the transaction was processed.

    _Read Only_

+ `updatedTime`: `2016-01-01T04:5:55Z` (string) - Indicates the last updated time for the resource.

    _Read Only_

+ `statusTime`: `2016-01-01T04:55:55Z` (string) - Indicates when the status was last updated.

    _Read Only_

+ `status` (enum) - This is the status of the request.

    _Read Only_

    + Default: `COMPLETED`

    + Members
        + `RECEIVED`
        + `COMPLETED`
        + `FAILED`
        + `ERROR`